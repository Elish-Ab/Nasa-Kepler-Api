{"ast":null,"code":"import { animate } from 'motion';\nimport { easing } from '../easing/index.js';\nconst animateDraw = props => {\n  const {\n    element,\n    duration,\n    delay,\n    isEntering = true\n  } = props;\n  if (!(element instanceof SVGPathElement)) {\n    throw new Error('ARWES animateDraw() requires a SVGPathElement.');\n  }\n  const length = element.getTotalLength();\n  const easingCustom = typeof props.easing === 'string' ? easing[props.easing] : props.easing;\n  element.style.strokeDashoffset = String(isEntering ? length : 0);\n  element.style.strokeDasharray = String(length);\n  const animation = animate(element, {\n    strokeDashoffset: isEntering ? [length, 0] : [0, length]\n  }, {\n    duration,\n    delay,\n    easing: easingCustom || (isEntering ? easing.outExpo : easing.outSine)\n  });\n  if (isEntering) {\n    void animation.finished.then(() => {\n      element.style.strokeDashoffset = '';\n      element.style.strokeDasharray = '';\n    });\n  }\n  return animation;\n};\nexport { animateDraw };","map":{"version":3,"names":["animate","easing","animateDraw","props","element","duration","delay","isEntering","SVGPathElement","Error","length","getTotalLength","easingCustom","style","strokeDashoffset","String","strokeDasharray","animation","outExpo","outSine","finished","then"],"sources":["/home/elisha-a/Nasa/client/node_modules/@arwes/animated/build/esm/animateDraw/animateDraw.js"],"sourcesContent":["import { animate } from 'motion';\nimport { easing } from '../easing/index.js';\nconst animateDraw = (props) => {\n    const { element, duration, delay, isEntering = true } = props;\n    if (!(element instanceof SVGPathElement)) {\n        throw new Error('ARWES animateDraw() requires a SVGPathElement.');\n    }\n    const length = element.getTotalLength();\n    const easingCustom = typeof props.easing === 'string' ? easing[props.easing] : props.easing;\n    element.style.strokeDashoffset = String(isEntering ? length : 0);\n    element.style.strokeDasharray = String(length);\n    const animation = animate(element, { strokeDashoffset: isEntering ? [length, 0] : [0, length] }, { duration, delay, easing: easingCustom || (isEntering ? easing.outExpo : easing.outSine) });\n    if (isEntering) {\n        void animation.finished.then(() => {\n            element.style.strokeDashoffset = '';\n            element.style.strokeDasharray = '';\n        });\n    }\n    return animation;\n};\nexport { animateDraw };\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,QAAQ;AAChC,SAASC,MAAM,QAAQ,oBAAoB;AAC3C,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAC3B,MAAM;IAAEC,OAAO;IAAEC,QAAQ;IAAEC,KAAK;IAAEC,UAAU,GAAG;EAAK,CAAC,GAAGJ,KAAK;EAC7D,IAAI,EAAEC,OAAO,YAAYI,cAAc,CAAC,EAAE;IACtC,MAAM,IAAIC,KAAK,CAAC,gDAAgD,CAAC;EACrE;EACA,MAAMC,MAAM,GAAGN,OAAO,CAACO,cAAc,CAAC,CAAC;EACvC,MAAMC,YAAY,GAAG,OAAOT,KAAK,CAACF,MAAM,KAAK,QAAQ,GAAGA,MAAM,CAACE,KAAK,CAACF,MAAM,CAAC,GAAGE,KAAK,CAACF,MAAM;EAC3FG,OAAO,CAACS,KAAK,CAACC,gBAAgB,GAAGC,MAAM,CAACR,UAAU,GAAGG,MAAM,GAAG,CAAC,CAAC;EAChEN,OAAO,CAACS,KAAK,CAACG,eAAe,GAAGD,MAAM,CAACL,MAAM,CAAC;EAC9C,MAAMO,SAAS,GAAGjB,OAAO,CAACI,OAAO,EAAE;IAAEU,gBAAgB,EAAEP,UAAU,GAAG,CAACG,MAAM,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAEA,MAAM;EAAE,CAAC,EAAE;IAAEL,QAAQ;IAAEC,KAAK;IAAEL,MAAM,EAAEW,YAAY,KAAKL,UAAU,GAAGN,MAAM,CAACiB,OAAO,GAAGjB,MAAM,CAACkB,OAAO;EAAE,CAAC,CAAC;EAC7L,IAAIZ,UAAU,EAAE;IACZ,KAAKU,SAAS,CAACG,QAAQ,CAACC,IAAI,CAAC,MAAM;MAC/BjB,OAAO,CAACS,KAAK,CAACC,gBAAgB,GAAG,EAAE;MACnCV,OAAO,CAACS,KAAK,CAACG,eAAe,GAAG,EAAE;IACtC,CAAC,CAAC;EACN;EACA,OAAOC,SAAS;AACpB,CAAC;AACD,SAASf,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module"}