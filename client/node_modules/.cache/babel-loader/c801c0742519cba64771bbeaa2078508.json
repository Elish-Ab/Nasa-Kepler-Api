{"ast":null,"code":"import { easing, createAnimation } from '@arwes/animated';\nconst defaultProps = {\n  color: '#777',\n  quantity: 10,\n  padding: 50,\n  xOffset: [0, 0],\n  yOffset: [-10, -100],\n  radiusInitial: 4,\n  radiusOffset: [4, 40],\n  sets: 5\n};\nconst minmaxOverflow01 = value => Math.min(1, Math.max(0, value === 1 ? 1 : value % 1));\nconst createBackgroundPuffs = props => {\n  const {\n    canvas,\n    animator\n  } = props;\n  const ctx = canvas.getContext('2d');\n  if (!ctx) {\n    return {\n      cancel: () => {}\n    };\n  }\n  let resizeObserver;\n  let transitionControl;\n  let runningControl;\n  let unsubscribe;\n  let runningControlTimeoutId;\n  let puffsSets = [];\n  const getSettings = () => ({\n    ...defaultProps,\n    ...props.settingsRef.current\n  });\n  const createPuff = (width, height) => {\n    const {\n      padding,\n      xOffset,\n      yOffset,\n      radiusInitial,\n      radiusOffset\n    } = getSettings();\n    const x = padding + Math.random() * (width - padding * 2);\n    const y = padding + Math.random() * (height - padding * 2);\n    const r = radiusInitial;\n    const xo = xOffset[0] + Math.random() * xOffset[1];\n    const yo = yOffset[0] + Math.random() * yOffset[1];\n    const ro = radiusOffset[0] + Math.random() * radiusOffset[1];\n    return {\n      x,\n      y,\n      r,\n      xo,\n      yo,\n      ro\n    };\n  };\n  const createPuffsSets = (width, height) => {\n    const {\n      quantity,\n      sets\n    } = getSettings();\n    const puffsSetQuantity = Math.round(quantity / sets);\n    return Array(sets).fill(null).map(() => Array(puffsSetQuantity).fill(null).map(() => createPuff(width, height)));\n  };\n  const resize = () => {\n    const dpr = Math.min(window.devicePixelRatio || 2, 2);\n    const {\n      width,\n      height\n    } = canvas.getBoundingClientRect();\n    if (canvas.width !== width * dpr || canvas.height !== height * dpr) {\n      canvas.width = width * dpr;\n      canvas.height = height * dpr;\n    }\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.scale(dpr, dpr);\n    puffsSets = createPuffsSets(width, height);\n  };\n  const drawPuffs = (puffs, progress) => {\n    const {\n      color\n    } = getSettings();\n    ctx.globalAlpha = progress <= 0.5 ? progress * 2 : -2 * progress + 2;\n    puffs.forEach(puff => {\n      const x = puff.x + progress * puff.xo;\n      const y = puff.y + progress * puff.yo;\n      const r = puff.r + progress * puff.ro;\n      const grd = ctx.createRadialGradient(x, y, 0, x, y, r);\n      grd.addColorStop(0, color);\n      grd.addColorStop(1, 'transparent');\n      ctx.beginPath();\n      ctx.fillStyle = grd;\n      ctx.arc(x, y, r, 0, 2 * Math.PI);\n      ctx.fill();\n      ctx.closePath();\n    });\n  };\n  const draw = progress => {\n    const {\n      sets\n    } = getSettings();\n    const {\n      width,\n      height\n    } = canvas;\n    const puffsSetOffset = 1 / sets;\n    ctx.clearRect(0, 0, width, height);\n    puffsSets.forEach((puffs, index) => {\n      const puffsOffset = puffsSetOffset * index;\n      const puffsProgress = minmaxOverflow01(progress + puffsOffset);\n      drawPuffs(puffs, easing.outSine(puffsProgress));\n    });\n  };\n  const run = () => {\n    if (!animator) {\n      return;\n    }\n    const {\n      duration: {\n        interval = 2,\n        intervalPause = 0\n      }\n    } = animator.settings;\n    runningControl?.cancel();\n    runningControl = createAnimation({\n      duration: interval,\n      easing: 'linear',\n      onUpdate(progress) {\n        draw(progress);\n      },\n      onFinish() {\n        const emptyDuration = intervalPause * 1000;\n        window.clearTimeout(runningControlTimeoutId);\n        runningControlTimeoutId = window.setTimeout(run, emptyDuration);\n      }\n    });\n  };\n  const setup = () => {\n    if (typeof window !== 'undefined' && !resizeObserver) {\n      resizeObserver = new window.ResizeObserver(() => {\n        resize();\n        if (!animator) {\n          draw(1);\n        }\n      });\n      resizeObserver.observe(canvas);\n      resize();\n    }\n  };\n  const stop = () => {\n    resizeObserver?.disconnect();\n    resizeObserver = undefined;\n    transitionControl?.cancel();\n    transitionControl = undefined;\n    runningControl?.cancel();\n    runningControl = undefined;\n    window.clearTimeout(runningControlTimeoutId);\n    runningControlTimeoutId = undefined;\n  };\n  const start = () => {\n    if (!animator) {\n      setup();\n      draw(1);\n      canvas.style.opacity = '1';\n      return;\n    }\n    unsubscribe = animator.subscribe(node => {\n      switch (node.state) {\n        case 'entering':\n          {\n            setup();\n            if (runningControl === undefined) {\n              run();\n            }\n            transitionControl?.cancel();\n            transitionControl = createAnimation({\n              duration: node.settings.duration.enter,\n              onUpdate(progress) {\n                canvas.style.opacity = String(progress);\n              }\n            });\n            break;\n          }\n        case 'entered':\n          {\n            setup();\n            if (runningControl === undefined) {\n              run();\n            }\n            canvas.style.opacity = '1';\n            break;\n          }\n        case 'exiting':\n          {\n            transitionControl?.cancel();\n            transitionControl = createAnimation({\n              duration: node.settings.duration.exit,\n              onUpdate(progress) {\n                canvas.style.opacity = String(1 - progress);\n              }\n            });\n            break;\n          }\n        case 'exited':\n          {\n            stop();\n            canvas.style.opacity = '0';\n            break;\n          }\n      }\n    });\n  };\n  const cancel = () => {\n    unsubscribe?.();\n    stop();\n    canvas.style.opacity = '0';\n  };\n  start();\n  return Object.freeze({\n    cancel\n  });\n};\nexport { createBackgroundPuffs };","map":{"version":3,"names":["easing","createAnimation","defaultProps","color","quantity","padding","xOffset","yOffset","radiusInitial","radiusOffset","sets","minmaxOverflow01","value","Math","min","max","createBackgroundPuffs","props","canvas","animator","ctx","getContext","cancel","resizeObserver","transitionControl","runningControl","unsubscribe","runningControlTimeoutId","puffsSets","getSettings","settingsRef","current","createPuff","width","height","x","random","y","r","xo","yo","ro","createPuffsSets","puffsSetQuantity","round","Array","fill","map","resize","dpr","window","devicePixelRatio","getBoundingClientRect","setTransform","scale","drawPuffs","puffs","progress","globalAlpha","forEach","puff","grd","createRadialGradient","addColorStop","beginPath","fillStyle","arc","PI","closePath","draw","puffsSetOffset","clearRect","index","puffsOffset","puffsProgress","outSine","run","duration","interval","intervalPause","settings","onUpdate","onFinish","emptyDuration","clearTimeout","setTimeout","setup","ResizeObserver","observe","stop","disconnect","undefined","start","style","opacity","subscribe","node","state","enter","String","exit","Object","freeze"],"sources":["/home/elisha-a/Nasa/client/node_modules/@arwes/bgs/build/esm/createBackgroundPuffs/createBackgroundPuffs.js"],"sourcesContent":["import { easing, createAnimation } from '@arwes/animated';\nconst defaultProps = {\n    color: '#777',\n    quantity: 10,\n    padding: 50,\n    xOffset: [0, 0],\n    yOffset: [-10, -100],\n    radiusInitial: 4,\n    radiusOffset: [4, 40],\n    sets: 5\n};\nconst minmaxOverflow01 = (value) => Math.min(1, Math.max(0, value === 1 ? 1 : value % 1));\nconst createBackgroundPuffs = (props) => {\n    const { canvas, animator } = props;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n        return { cancel: () => { } };\n    }\n    let resizeObserver;\n    let transitionControl;\n    let runningControl;\n    let unsubscribe;\n    let runningControlTimeoutId;\n    let puffsSets = [];\n    const getSettings = () => ({\n        ...defaultProps,\n        ...props.settingsRef.current\n    });\n    const createPuff = (width, height) => {\n        const { padding, xOffset, yOffset, radiusInitial, radiusOffset } = getSettings();\n        const x = padding + Math.random() * (width - padding * 2);\n        const y = padding + Math.random() * (height - padding * 2);\n        const r = radiusInitial;\n        const xo = xOffset[0] + Math.random() * xOffset[1];\n        const yo = yOffset[0] + Math.random() * yOffset[1];\n        const ro = radiusOffset[0] + Math.random() * radiusOffset[1];\n        return { x, y, r, xo, yo, ro };\n    };\n    const createPuffsSets = (width, height) => {\n        const { quantity, sets } = getSettings();\n        const puffsSetQuantity = Math.round(quantity / sets);\n        return Array(sets)\n            .fill(null)\n            .map(() => Array(puffsSetQuantity)\n            .fill(null)\n            .map(() => createPuff(width, height)));\n    };\n    const resize = () => {\n        const dpr = Math.min(window.devicePixelRatio || 2, 2);\n        const { width, height } = canvas.getBoundingClientRect();\n        if (canvas.width !== width * dpr || canvas.height !== height * dpr) {\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n        }\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        ctx.scale(dpr, dpr);\n        puffsSets = createPuffsSets(width, height);\n    };\n    const drawPuffs = (puffs, progress) => {\n        const { color } = getSettings();\n        ctx.globalAlpha = progress <= 0.5 ? progress * 2 : -2 * progress + 2;\n        puffs.forEach((puff) => {\n            const x = puff.x + progress * puff.xo;\n            const y = puff.y + progress * puff.yo;\n            const r = puff.r + progress * puff.ro;\n            const grd = ctx.createRadialGradient(x, y, 0, x, y, r);\n            grd.addColorStop(0, color);\n            grd.addColorStop(1, 'transparent');\n            ctx.beginPath();\n            ctx.fillStyle = grd;\n            ctx.arc(x, y, r, 0, 2 * Math.PI);\n            ctx.fill();\n            ctx.closePath();\n        });\n    };\n    const draw = (progress) => {\n        const { sets } = getSettings();\n        const { width, height } = canvas;\n        const puffsSetOffset = 1 / sets;\n        ctx.clearRect(0, 0, width, height);\n        puffsSets.forEach((puffs, index) => {\n            const puffsOffset = puffsSetOffset * index;\n            const puffsProgress = minmaxOverflow01(progress + puffsOffset);\n            drawPuffs(puffs, easing.outSine(puffsProgress));\n        });\n    };\n    const run = () => {\n        if (!animator) {\n            return;\n        }\n        const { duration: { interval = 2, intervalPause = 0 } } = animator.settings;\n        runningControl?.cancel();\n        runningControl = createAnimation({\n            duration: interval,\n            easing: 'linear',\n            onUpdate(progress) {\n                draw(progress);\n            },\n            onFinish() {\n                const emptyDuration = intervalPause * 1000;\n                window.clearTimeout(runningControlTimeoutId);\n                runningControlTimeoutId = window.setTimeout(run, emptyDuration);\n            }\n        });\n    };\n    const setup = () => {\n        if (typeof window !== 'undefined' && !resizeObserver) {\n            resizeObserver = new window.ResizeObserver(() => {\n                resize();\n                if (!animator) {\n                    draw(1);\n                }\n            });\n            resizeObserver.observe(canvas);\n            resize();\n        }\n    };\n    const stop = () => {\n        resizeObserver?.disconnect();\n        resizeObserver = undefined;\n        transitionControl?.cancel();\n        transitionControl = undefined;\n        runningControl?.cancel();\n        runningControl = undefined;\n        window.clearTimeout(runningControlTimeoutId);\n        runningControlTimeoutId = undefined;\n    };\n    const start = () => {\n        if (!animator) {\n            setup();\n            draw(1);\n            canvas.style.opacity = '1';\n            return;\n        }\n        unsubscribe = animator.subscribe((node) => {\n            switch (node.state) {\n                case 'entering': {\n                    setup();\n                    if (runningControl === undefined) {\n                        run();\n                    }\n                    transitionControl?.cancel();\n                    transitionControl = createAnimation({\n                        duration: node.settings.duration.enter,\n                        onUpdate(progress) {\n                            canvas.style.opacity = String(progress);\n                        }\n                    });\n                    break;\n                }\n                case 'entered': {\n                    setup();\n                    if (runningControl === undefined) {\n                        run();\n                    }\n                    canvas.style.opacity = '1';\n                    break;\n                }\n                case 'exiting': {\n                    transitionControl?.cancel();\n                    transitionControl = createAnimation({\n                        duration: node.settings.duration.exit,\n                        onUpdate(progress) {\n                            canvas.style.opacity = String(1 - progress);\n                        }\n                    });\n                    break;\n                }\n                case 'exited': {\n                    stop();\n                    canvas.style.opacity = '0';\n                    break;\n                }\n            }\n        });\n    };\n    const cancel = () => {\n        unsubscribe?.();\n        stop();\n        canvas.style.opacity = '0';\n    };\n    start();\n    return Object.freeze({ cancel });\n};\nexport { createBackgroundPuffs };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}