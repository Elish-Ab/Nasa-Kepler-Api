{"ast":null,"code":"import { timeline } from 'motion';\nimport { easing } from '@arwes/animated';\nconst animateFrameAssembler = props => {\n  const {\n    element,\n    duration,\n    isEntering = true\n  } = props;\n  const bgs = Array.from(element.querySelectorAll('[data-name=bg]'));\n  const lines = Array.from(element.querySelectorAll('[data-name=line]'));\n  const decos = Array.from(element.querySelectorAll('[data-name=deco]'));\n  const elements = [...bgs, ...lines, ...decos];\n  for (const line of lines) {\n    const length = line.getTotalLength();\n    line.style.opacity = '1';\n    line.style.strokeDasharray = String(length);\n    line.dataset.length = String(length);\n  }\n  const lineAnimations = lines.map(line => {\n    const length = Number(line.dataset.length);\n    return [line, {\n      strokeDashoffset: [length, 0]\n    }, {\n      at: 0,\n      duration,\n      easing: easing.outSine\n    }];\n  });\n  const animation = timeline([[bgs, {\n    opacity: [0, 1]\n  }, {\n    at: 0,\n    duration: duration / 2,\n    easing: easing.outSine\n  }], [decos, {\n    opacity: [0, 1, 0.5, 1]\n  }, {\n    at: duration / 2,\n    duration: duration / 2,\n    easing: easing.outSine\n  }], ...lineAnimations], {\n    direction: isEntering ? 'normal' : 'reverse'\n  });\n  void animation.finished.then(() => {\n    for (const element of elements) {\n      element.style.opacity = isEntering ? '1' : '0';\n    }\n    for (const line of lines) {\n      line.style.strokeDasharray = '';\n      line.style.strokeDashoffset = '';\n    }\n  });\n  return animation;\n};\nexport { animateFrameAssembler };","map":{"version":3,"names":["timeline","easing","animateFrameAssembler","props","element","duration","isEntering","bgs","Array","from","querySelectorAll","lines","decos","elements","line","length","getTotalLength","style","opacity","strokeDasharray","String","dataset","lineAnimations","map","Number","strokeDashoffset","at","outSine","animation","direction","finished","then"],"sources":["/home/elisha-a/Nasa/client/node_modules/@arwes/frames/build/esm/animateFrameAssembler/animateFrameAssembler.js"],"sourcesContent":["import { timeline } from 'motion';\nimport { easing } from '@arwes/animated';\nconst animateFrameAssembler = (props) => {\n    const { element, duration, isEntering = true } = props;\n    const bgs = Array.from(element.querySelectorAll('[data-name=bg]'));\n    const lines = Array.from(element.querySelectorAll('[data-name=line]'));\n    const decos = Array.from(element.querySelectorAll('[data-name=deco]'));\n    const elements = [...bgs, ...lines, ...decos];\n    for (const line of lines) {\n        const length = line.getTotalLength();\n        line.style.opacity = '1';\n        line.style.strokeDasharray = String(length);\n        line.dataset.length = String(length);\n    }\n    const lineAnimations = lines.map((line) => {\n        const length = Number(line.dataset.length);\n        return [line, { strokeDashoffset: [length, 0] }, { at: 0, duration, easing: easing.outSine }];\n    });\n    const animation = timeline([\n        [bgs, { opacity: [0, 1] }, { at: 0, duration: duration / 2, easing: easing.outSine }],\n        [\n            decos,\n            { opacity: [0, 1, 0.5, 1] },\n            { at: duration / 2, duration: duration / 2, easing: easing.outSine }\n        ],\n        ...lineAnimations\n    ], {\n        direction: isEntering ? 'normal' : 'reverse'\n    });\n    void animation.finished.then(() => {\n        for (const element of elements) {\n            element.style.opacity = isEntering ? '1' : '0';\n        }\n        for (const line of lines) {\n            line.style.strokeDasharray = '';\n            line.style.strokeDashoffset = '';\n        }\n    });\n    return animation;\n};\nexport { animateFrameAssembler };\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,QAAQ;AACjC,SAASC,MAAM,QAAQ,iBAAiB;AACxC,MAAMC,qBAAqB,GAAIC,KAAK,IAAK;EACrC,MAAM;IAAEC,OAAO;IAAEC,QAAQ;IAAEC,UAAU,GAAG;EAAK,CAAC,GAAGH,KAAK;EACtD,MAAMI,GAAG,GAAGC,KAAK,CAACC,IAAI,CAACL,OAAO,CAACM,gBAAgB,CAAC,gBAAgB,CAAC,CAAC;EAClE,MAAMC,KAAK,GAAGH,KAAK,CAACC,IAAI,CAACL,OAAO,CAACM,gBAAgB,CAAC,kBAAkB,CAAC,CAAC;EACtE,MAAME,KAAK,GAAGJ,KAAK,CAACC,IAAI,CAACL,OAAO,CAACM,gBAAgB,CAAC,kBAAkB,CAAC,CAAC;EACtE,MAAMG,QAAQ,GAAG,CAAC,GAAGN,GAAG,EAAE,GAAGI,KAAK,EAAE,GAAGC,KAAK,CAAC;EAC7C,KAAK,MAAME,IAAI,IAAIH,KAAK,EAAE;IACtB,MAAMI,MAAM,GAAGD,IAAI,CAACE,cAAc,CAAC,CAAC;IACpCF,IAAI,CAACG,KAAK,CAACC,OAAO,GAAG,GAAG;IACxBJ,IAAI,CAACG,KAAK,CAACE,eAAe,GAAGC,MAAM,CAACL,MAAM,CAAC;IAC3CD,IAAI,CAACO,OAAO,CAACN,MAAM,GAAGK,MAAM,CAACL,MAAM,CAAC;EACxC;EACA,MAAMO,cAAc,GAAGX,KAAK,CAACY,GAAG,CAAET,IAAI,IAAK;IACvC,MAAMC,MAAM,GAAGS,MAAM,CAACV,IAAI,CAACO,OAAO,CAACN,MAAM,CAAC;IAC1C,OAAO,CAACD,IAAI,EAAE;MAAEW,gBAAgB,EAAE,CAACV,MAAM,EAAE,CAAC;IAAE,CAAC,EAAE;MAAEW,EAAE,EAAE,CAAC;MAAErB,QAAQ;MAAEJ,MAAM,EAAEA,MAAM,CAAC0B;IAAQ,CAAC,CAAC;EACjG,CAAC,CAAC;EACF,MAAMC,SAAS,GAAG5B,QAAQ,CAAC,CACvB,CAACO,GAAG,EAAE;IAAEW,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC;EAAE,CAAC,EAAE;IAAEQ,EAAE,EAAE,CAAC;IAAErB,QAAQ,EAAEA,QAAQ,GAAG,CAAC;IAAEJ,MAAM,EAAEA,MAAM,CAAC0B;EAAQ,CAAC,CAAC,EACrF,CACIf,KAAK,EACL;IAAEM,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC;EAAE,CAAC,EAC3B;IAAEQ,EAAE,EAAErB,QAAQ,GAAG,CAAC;IAAEA,QAAQ,EAAEA,QAAQ,GAAG,CAAC;IAAEJ,MAAM,EAAEA,MAAM,CAAC0B;EAAQ,CAAC,CACvE,EACD,GAAGL,cAAc,CACpB,EAAE;IACCO,SAAS,EAAEvB,UAAU,GAAG,QAAQ,GAAG;EACvC,CAAC,CAAC;EACF,KAAKsB,SAAS,CAACE,QAAQ,CAACC,IAAI,CAAC,MAAM;IAC/B,KAAK,MAAM3B,OAAO,IAAIS,QAAQ,EAAE;MAC5BT,OAAO,CAACa,KAAK,CAACC,OAAO,GAAGZ,UAAU,GAAG,GAAG,GAAG,GAAG;IAClD;IACA,KAAK,MAAMQ,IAAI,IAAIH,KAAK,EAAE;MACtBG,IAAI,CAACG,KAAK,CAACE,eAAe,GAAG,EAAE;MAC/BL,IAAI,CAACG,KAAK,CAACQ,gBAAgB,GAAG,EAAE;IACpC;EACJ,CAAC,CAAC;EACF,OAAOG,SAAS;AACpB,CAAC;AACD,SAAS1B,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module"}