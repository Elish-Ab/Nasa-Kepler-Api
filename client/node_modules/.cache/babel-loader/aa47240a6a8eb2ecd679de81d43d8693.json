{"ast":null,"code":"import { filterProps } from '@arwes/tools';\nimport { animate } from 'motion';\nconst defaultProps = {\n  styled: true,\n  animated: true,\n  padding: 0,\n  strokeWidth: 1,\n  separation: 0,\n  sideWidth: 24\n};\nconst createFrameCircleSettings = props => {\n  const {\n    styled,\n    animated,\n    padding: p,\n    strokeWidth,\n    separation,\n    sideWidth\n  } = {\n    ...defaultProps,\n    ...(props ? filterProps(props) : null)\n  };\n  const strokeOffset = strokeWidth / 2;\n  return {\n    elements: [{\n      type: 'g',\n      style: {\n        transformOrigin: 'center'\n      },\n      animated: animated && {\n        initialStyle: {\n          rotate: -45\n        },\n        transitions: {\n          entering: {\n            rotate: [-45, 0],\n            easing: 'outExpo'\n          },\n          exiting: {\n            rotate: [0, 45],\n            easing: 'outExpo'\n          }\n        }\n      },\n      elements: [{\n        type: 'g',\n        animated: animated && {\n          transitions: {\n            entering: ({\n              element,\n              duration\n            }) => animate(element, {\n              opacity: [0, 1]\n            }, {\n              delay: duration / 2,\n              duration: duration / 2\n            }),\n            exiting: ({\n              element,\n              duration\n            }) => animate(element, {\n              opacity: [1, 0]\n            }, {\n              duration: duration / 2\n            })\n          }\n        },\n        elements: [{\n          type: 'ellipse',\n          name: 'bg',\n          cx: '50%',\n          cy: '50%',\n          rx: `50% - ${p + strokeWidth + strokeWidth * 3 + separation}`,\n          ry: `50% - ${p + strokeWidth + strokeWidth * 3 + separation}`,\n          style: {\n            filter: styled ? 'var(--arwes-frames-bg-filter)' : undefined,\n            fill: styled ? 'var(--arwes-frames-bg-color, currentcolor)' : undefined,\n            strokeWidth: 0\n          }\n        }, {\n          type: 'ellipse',\n          name: 'line',\n          cx: '50%',\n          cy: '50%',\n          rx: `50% - ${p + strokeOffset + strokeWidth * 3}`,\n          ry: `50% - ${p + strokeOffset + strokeWidth * 3}`,\n          style: {\n            filter: styled ? 'var(--arwes-frames-line-filter)' : undefined,\n            fill: styled ? 'none' : undefined,\n            stroke: styled ? 'var(--arwes-frames-line-color, currentcolor)' : undefined,\n            strokeWidth: String(strokeWidth)\n          }\n        }]\n      }, {\n        type: 'g',\n        name: 'deco',\n        style: {\n          transformOrigin: 'center'\n        },\n        animated: animated && {\n          transitions: {\n            entering: ({\n              element,\n              duration\n            }) => animate(element, {\n              opacity: [0, 1, 0.5, 1],\n              scale: [0.9, 1]\n            }, {\n              duration: duration / 2\n            }),\n            exiting: ({\n              element,\n              duration\n            }) => animate(element, {\n              opacity: [1, 0, 0.5, 0],\n              scale: [1, 0.9]\n            }, {\n              delay: duration / 2,\n              duration: duration / 2\n            })\n          }\n        },\n        elements: [{\n          type: 'ellipse',\n          cx: '50%',\n          cy: '50%',\n          rx: `50% - ${p + strokeOffset + strokeWidth * 3}`,\n          ry: `50% - ${p + strokeOffset + strokeWidth * 3}`,\n          style: {\n            filter: styled ? 'var(--arwes-frames-deco-filter)' : undefined,\n            fill: styled ? 'none' : undefined,\n            stroke: styled ? 'var(--arwes-frames-deco-color, currentcolor)' : undefined,\n            strokeWidth: String(strokeWidth),\n            transformOrigin: 'center',\n            rotate: -(360 / 16)\n          },\n          draw: ({\n            element\n          }) => {\n            const radius = Number(element.getAttribute('rx'));\n            const length = radius * Math.PI * 2;\n            element.setAttribute('stroke-dasharray', String(length / 8));\n          }\n        }, {\n          type: 'g',\n          style: {\n            filter: styled ? 'var(--arwes-frames-deco-filter)' : undefined,\n            fill: styled ? 'var(--arwes-frames-deco-color, currentcolor)' : undefined,\n            stroke: styled ? 'none' : undefined,\n            strokeWidth: '0'\n          },\n          elements: [{\n            type: 'path',\n            path: [['M', p, `50% - ${sideWidth * 0.2}`], ['l', strokeWidth * 2, -sideWidth * 0.3], ['h', strokeWidth * 2], ['v', sideWidth], ['h', -strokeWidth * 2], ['l', -strokeWidth * 2, -sideWidth * 0.3], 'z']\n          }, {\n            type: 'path',\n            path: [['M', `100% - ${p}`, `50% - ${sideWidth * 0.2}`], ['l', -strokeWidth * 2, -sideWidth * 0.3], ['h', -strokeWidth * 2], ['v', sideWidth], ['h', strokeWidth * 2], ['l', strokeWidth * 2, -sideWidth * 0.3], 'z']\n          }, {\n            type: 'path',\n            path: [['M', `50% + ${sideWidth * 0.2}`, p], ['l', sideWidth * 0.3, strokeWidth * 2], ['v', strokeWidth * 2], ['h', -sideWidth], ['v', -strokeWidth * 2], ['l', sideWidth * 0.3, -strokeWidth * 2], 'z']\n          }, {\n            type: 'path',\n            path: [['M', `50% + ${sideWidth * 0.2}`, `100% - ${p}`], ['l', sideWidth * 0.3, -strokeWidth * 2], ['v', -strokeWidth * 2], ['h', -sideWidth], ['v', strokeWidth * 2], ['l', sideWidth * 0.3, strokeWidth * 2], 'z']\n          }]\n        }]\n      }]\n    }]\n  };\n};\nexport { createFrameCircleSettings };","map":{"version":3,"names":["filterProps","animate","defaultProps","styled","animated","padding","strokeWidth","separation","sideWidth","createFrameCircleSettings","props","p","strokeOffset","elements","type","style","transformOrigin","initialStyle","rotate","transitions","entering","easing","exiting","element","duration","opacity","delay","name","cx","cy","rx","ry","filter","undefined","fill","stroke","String","scale","draw","radius","Number","getAttribute","length","Math","PI","setAttribute","path"],"sources":["/home/elisha-a/Nasa/client/node_modules/@arwes/frames/build/esm/createFrameCircleSettings/createFrameCircleSettings.js"],"sourcesContent":["import { filterProps } from '@arwes/tools';\nimport { animate } from 'motion';\nconst defaultProps = {\n    styled: true,\n    animated: true,\n    padding: 0,\n    strokeWidth: 1,\n    separation: 0,\n    sideWidth: 24\n};\nconst createFrameCircleSettings = (props) => {\n    const { styled, animated, padding: p, strokeWidth, separation, sideWidth } = { ...defaultProps, ...(props ? filterProps(props) : null) };\n    const strokeOffset = strokeWidth / 2;\n    return {\n        elements: [\n            {\n                type: 'g',\n                style: {\n                    transformOrigin: 'center'\n                },\n                animated: animated && {\n                    initialStyle: { rotate: -45 },\n                    transitions: {\n                        entering: { rotate: [-45, 0], easing: 'outExpo' },\n                        exiting: { rotate: [0, 45], easing: 'outExpo' }\n                    }\n                },\n                elements: [\n                    {\n                        type: 'g',\n                        animated: animated && {\n                            transitions: {\n                                entering: ({ element, duration }) => animate(element, { opacity: [0, 1] }, { delay: duration / 2, duration: duration / 2 }),\n                                exiting: ({ element, duration }) => animate(element, { opacity: [1, 0] }, { duration: duration / 2 })\n                            }\n                        },\n                        elements: [\n                            {\n                                type: 'ellipse',\n                                name: 'bg',\n                                cx: '50%',\n                                cy: '50%',\n                                rx: `50% - ${p + strokeWidth + strokeWidth * 3 + separation}`,\n                                ry: `50% - ${p + strokeWidth + strokeWidth * 3 + separation}`,\n                                style: {\n                                    filter: styled ? 'var(--arwes-frames-bg-filter)' : undefined,\n                                    fill: styled ? 'var(--arwes-frames-bg-color, currentcolor)' : undefined,\n                                    strokeWidth: 0\n                                }\n                            },\n                            {\n                                type: 'ellipse',\n                                name: 'line',\n                                cx: '50%',\n                                cy: '50%',\n                                rx: `50% - ${p + strokeOffset + strokeWidth * 3}`,\n                                ry: `50% - ${p + strokeOffset + strokeWidth * 3}`,\n                                style: {\n                                    filter: styled ? 'var(--arwes-frames-line-filter)' : undefined,\n                                    fill: styled ? 'none' : undefined,\n                                    stroke: styled ? 'var(--arwes-frames-line-color, currentcolor)' : undefined,\n                                    strokeWidth: String(strokeWidth)\n                                }\n                            }\n                        ]\n                    },\n                    {\n                        type: 'g',\n                        name: 'deco',\n                        style: {\n                            transformOrigin: 'center'\n                        },\n                        animated: animated && {\n                            transitions: {\n                                entering: ({ element, duration }) => animate(element, { opacity: [0, 1, 0.5, 1], scale: [0.9, 1] }, { duration: duration / 2 }),\n                                exiting: ({ element, duration }) => animate(element, { opacity: [1, 0, 0.5, 0], scale: [1, 0.9] }, { delay: duration / 2, duration: duration / 2 })\n                            }\n                        },\n                        elements: [\n                            {\n                                type: 'ellipse',\n                                cx: '50%',\n                                cy: '50%',\n                                rx: `50% - ${p + strokeOffset + strokeWidth * 3}`,\n                                ry: `50% - ${p + strokeOffset + strokeWidth * 3}`,\n                                style: {\n                                    filter: styled ? 'var(--arwes-frames-deco-filter)' : undefined,\n                                    fill: styled ? 'none' : undefined,\n                                    stroke: styled ? 'var(--arwes-frames-deco-color, currentcolor)' : undefined,\n                                    strokeWidth: String(strokeWidth),\n                                    transformOrigin: 'center',\n                                    rotate: -(360 / 16)\n                                },\n                                draw: ({ element }) => {\n                                    const radius = Number(element.getAttribute('rx'));\n                                    const length = radius * Math.PI * 2;\n                                    element.setAttribute('stroke-dasharray', String(length / 8));\n                                }\n                            },\n                            {\n                                type: 'g',\n                                style: {\n                                    filter: styled ? 'var(--arwes-frames-deco-filter)' : undefined,\n                                    fill: styled ? 'var(--arwes-frames-deco-color, currentcolor)' : undefined,\n                                    stroke: styled ? 'none' : undefined,\n                                    strokeWidth: '0'\n                                },\n                                elements: [\n                                    {\n                                        type: 'path',\n                                        path: [\n                                            ['M', p, `50% - ${sideWidth * 0.2}`],\n                                            ['l', strokeWidth * 2, -sideWidth * 0.3],\n                                            ['h', strokeWidth * 2],\n                                            ['v', sideWidth],\n                                            ['h', -strokeWidth * 2],\n                                            ['l', -strokeWidth * 2, -sideWidth * 0.3],\n                                            'z'\n                                        ]\n                                    },\n                                    {\n                                        type: 'path',\n                                        path: [\n                                            ['M', `100% - ${p}`, `50% - ${sideWidth * 0.2}`],\n                                            ['l', -strokeWidth * 2, -sideWidth * 0.3],\n                                            ['h', -strokeWidth * 2],\n                                            ['v', sideWidth],\n                                            ['h', strokeWidth * 2],\n                                            ['l', strokeWidth * 2, -sideWidth * 0.3],\n                                            'z'\n                                        ]\n                                    },\n                                    {\n                                        type: 'path',\n                                        path: [\n                                            ['M', `50% + ${sideWidth * 0.2}`, p],\n                                            ['l', sideWidth * 0.3, strokeWidth * 2],\n                                            ['v', strokeWidth * 2],\n                                            ['h', -sideWidth],\n                                            ['v', -strokeWidth * 2],\n                                            ['l', sideWidth * 0.3, -strokeWidth * 2],\n                                            'z'\n                                        ]\n                                    },\n                                    {\n                                        type: 'path',\n                                        path: [\n                                            ['M', `50% + ${sideWidth * 0.2}`, `100% - ${p}`],\n                                            ['l', sideWidth * 0.3, -strokeWidth * 2],\n                                            ['v', -strokeWidth * 2],\n                                            ['h', -sideWidth],\n                                            ['v', strokeWidth * 2],\n                                            ['l', sideWidth * 0.3, strokeWidth * 2],\n                                            'z'\n                                        ]\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            }\n        ]\n    };\n};\nexport { createFrameCircleSettings };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}