{"ast":null,"code":"import { createBleepSource } from './createBleepSource.js';\nconst createBleep = props => {\n  const isBrowser = typeof window !== 'undefined';\n  const isBrowserSafari = isBrowser && window.navigator.userAgent.includes('Safari') && !window.navigator.userAgent.includes('Chrome');\n  const isBleepsAvailable = isBrowser && !!window.AudioContext;\n  if (!isBleepsAvailable) {\n    return null;\n  }\n  const {\n    sources,\n    preload = true,\n    asyncLoad,\n    loop,\n    fetchHeaders,\n    masterGain,\n    maxPlaybackDelay = 0.25,\n    muteOnWindowBlur\n  } = props;\n  let volume = props.volume ?? 1;\n  let muted = !!props.muted;\n  let isExternallyMuted = false;\n  let isBufferLoading = false;\n  let isBufferError = false;\n  let isBufferPlaying = false;\n  let playbackCallbackTime = 0;\n  let asyncLoadCallbackId;\n  let bleepSource = null;\n  let buffer = null;\n  let duration = 0;\n  let fetchPromise;\n  const context = props.context ?? new window.AudioContext();\n  const gain = context.createGain();\n  const callersAccount = new Set();\n  const fetchAudioFile = (src, type, callback) => {\n    try {\n      void window.fetch(src, {\n        method: 'GET',\n        headers: fetchHeaders\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error('ARWES bleep source could not be fetched.');\n        }\n        return response;\n      }).then(response => response.arrayBuffer()).then(audioArrayBuffer => context.decodeAudioData(audioArrayBuffer)).then(audioBuffer => {\n        buffer = audioBuffer;\n        duration = buffer.duration;\n      }).catch(err => {\n        isBufferError = true;\n        console.error(`ARWES bleep with source URL \"${src}\" and type \"${type}\" could not be used:`, err);\n      }).then(() => {\n        isBufferLoading = false;\n        callback();\n      });\n    } catch (err) {\n      isBufferError = true;\n      isBufferLoading = false;\n      console.error(`ARWES bleep throws when fetched.`);\n    }\n  };\n  function loadAudioBuffer() {\n    if (buffer || isBufferLoading || isBufferError) {\n      return;\n    }\n    if (!sources.length) {\n      isBufferError = true;\n      console.error('ARWES bleep must have at least one source with a valid audio file URL and type.');\n      return;\n    }\n    const audioTest = new window.Audio();\n    const source = sources.find(source => {\n      if (isBrowserSafari && source.type.includes('audio/webm')) {\n        return false;\n      }\n      const support = audioTest.canPlayType(source.type || '');\n      return support === 'probably' || support === 'maybe';\n    });\n    if (!source) {\n      isBufferError = true;\n      console.error(`ARWES bleep sources \"${JSON.stringify(sources)}\" are not supported on this navigator.`);\n      return;\n    }\n    const {\n      src,\n      type\n    } = source;\n    isBufferLoading = true;\n    fetchPromise = new Promise(resolve => {\n      if (asyncLoad) {\n        asyncLoadCallbackId = window.setTimeout(() => {\n          fetchAudioFile(src, type, resolve);\n        }, 0);\n      } else {\n        fetchAudioFile(src, type, resolve);\n      }\n    });\n  }\n  function onUserAllowAudio() {\n    window.removeEventListener('click', onUserAllowAudio);\n    if (context.state === 'suspended') {\n      void context.resume();\n    }\n  }\n  function onUserWindowFocus() {\n    if (muteOnWindowBlur) {\n      isExternallyMuted = false;\n      update({});\n    }\n  }\n  function onUserWindowBlur() {\n    if (muteOnWindowBlur) {\n      isExternallyMuted = true;\n      update({});\n    }\n  }\n  function play(caller) {\n    const schedulePlay = () => {\n      if (Date.now() <= playbackCallbackTime + maxPlaybackDelay * 1000) {\n        play(caller);\n      }\n    };\n    playbackCallbackTime = Date.now();\n    if (isBufferError) {\n      return;\n    }\n    if (isBufferLoading) {\n      void fetchPromise.then(schedulePlay);\n      return;\n    }\n    if (!buffer) {\n      loadAudioBuffer();\n      void fetchPromise.then(schedulePlay);\n      return;\n    }\n    if (caller !== undefined) {\n      callersAccount.add(caller);\n    }\n    if (loop && isBufferPlaying) {\n      return;\n    }\n    if (context.state === 'suspended') {\n      window.addEventListener('click', onUserAllowAudio);\n      context.resume().then(schedulePlay).catch(err => {\n        const sourcesText = JSON.stringify(sources);\n        console.error(`ARWES bleep audio context with sources \"${sourcesText}\" could not be resumed to be played:`, err);\n      });\n      return;\n    }\n    if (bleepSource) {\n      bleepSource.stop();\n    }\n    bleepSource = createBleepSource({\n      context,\n      buffer,\n      gain,\n      loop,\n      onStop() {\n        isBufferPlaying = false;\n      }\n    });\n    isBufferPlaying = true;\n    bleepSource.start();\n  }\n  function stop(caller) {\n    if (!buffer) {\n      return;\n    }\n    if (caller !== undefined) {\n      callersAccount.delete(caller);\n    }\n    const canStop = loop ? !callersAccount.size : true;\n    if (canStop) {\n      if (bleepSource) {\n        bleepSource.stop();\n      }\n      isBufferPlaying = false;\n    }\n  }\n  function load() {\n    loadAudioBuffer();\n  }\n  function unload() {\n    if (bleepSource) {\n      bleepSource.stop();\n    }\n    bleepSource = null;\n    buffer = null;\n    isBufferLoading = false;\n    isBufferError = false;\n    isBufferPlaying = false;\n    window.clearTimeout(asyncLoadCallbackId);\n    window.removeEventListener('click', onUserAllowAudio);\n    window.removeEventListener('focus', onUserWindowFocus);\n    window.removeEventListener('blur', onUserWindowBlur);\n  }\n  function update(newProps) {\n    if (newProps.volume !== undefined) {\n      volume = Math.max(0, Math.min(1, newProps.volume));\n    }\n    if (newProps.muted !== undefined) {\n      muted = !!newProps.muted;\n    }\n    const newVolume = muted || isExternallyMuted ? 0 : volume;\n    if (newVolume !== gain.gain.value) {\n      gain.gain.value = newVolume;\n    }\n  }\n  const bleep = {};\n  const bleepAPI = {\n    duration: {\n      get: () => duration,\n      enumerable: true\n    },\n    volume: {\n      get: () => volume,\n      set: volume => update({\n        volume\n      }),\n      enumerable: true\n    },\n    muted: {\n      get: () => muted,\n      set: muted => update({\n        muted\n      }),\n      enumerable: true\n    },\n    isPlaying: {\n      get: () => isBufferPlaying,\n      enumerable: true\n    },\n    isLoaded: {\n      get: () => !!buffer,\n      enumerable: true\n    },\n    play: {\n      value: play,\n      enumerable: true\n    },\n    stop: {\n      value: stop,\n      enumerable: true\n    },\n    load: {\n      value: load,\n      enumerable: true\n    },\n    unload: {\n      value: unload,\n      enumerable: true\n    },\n    update: {\n      value: update,\n      enumerable: true\n    }\n  };\n  Object.defineProperties(bleep, bleepAPI);\n  if (masterGain) {\n    gain.connect(masterGain);\n  } else {\n    gain.connect(context.destination);\n  }\n  update({\n    volume\n  });\n  if (preload) {\n    loadAudioBuffer();\n  }\n  if (muteOnWindowBlur) {\n    window.addEventListener('focus', onUserWindowFocus);\n    window.addEventListener('blur', onUserWindowBlur);\n  }\n  return bleep;\n};\nexport { createBleep };","map":{"version":3,"names":["createBleepSource","createBleep","props","isBrowser","window","isBrowserSafari","navigator","userAgent","includes","isBleepsAvailable","AudioContext","sources","preload","asyncLoad","loop","fetchHeaders","masterGain","maxPlaybackDelay","muteOnWindowBlur","volume","muted","isExternallyMuted","isBufferLoading","isBufferError","isBufferPlaying","playbackCallbackTime","asyncLoadCallbackId","bleepSource","buffer","duration","fetchPromise","context","gain","createGain","callersAccount","Set","fetchAudioFile","src","type","callback","fetch","method","headers","then","response","ok","Error","arrayBuffer","audioArrayBuffer","decodeAudioData","audioBuffer","catch","err","console","error","loadAudioBuffer","length","audioTest","Audio","source","find","support","canPlayType","JSON","stringify","Promise","resolve","setTimeout","onUserAllowAudio","removeEventListener","state","resume","onUserWindowFocus","update","onUserWindowBlur","play","caller","schedulePlay","Date","now","undefined","add","addEventListener","sourcesText","stop","onStop","start","delete","canStop","size","load","unload","clearTimeout","newProps","Math","max","min","newVolume","value","bleep","bleepAPI","get","enumerable","set","isPlaying","isLoaded","Object","defineProperties","connect","destination"],"sources":["/home/elisha-a/Nasa/client/node_modules/@arwes/bleeps/build/esm/createBleep/createBleep.js"],"sourcesContent":["import { createBleepSource } from './createBleepSource.js';\nconst createBleep = (props) => {\n    const isBrowser = typeof window !== 'undefined';\n    const isBrowserSafari = isBrowser &&\n        window.navigator.userAgent.includes('Safari') &&\n        !window.navigator.userAgent.includes('Chrome');\n    const isBleepsAvailable = isBrowser && !!window.AudioContext;\n    if (!isBleepsAvailable) {\n        return null;\n    }\n    const { sources, preload = true, asyncLoad, loop, fetchHeaders, masterGain, maxPlaybackDelay = 0.25, muteOnWindowBlur } = props;\n    let volume = props.volume ?? 1;\n    let muted = !!props.muted;\n    let isExternallyMuted = false;\n    let isBufferLoading = false;\n    let isBufferError = false;\n    let isBufferPlaying = false;\n    let playbackCallbackTime = 0;\n    let asyncLoadCallbackId;\n    let bleepSource = null;\n    let buffer = null;\n    let duration = 0;\n    let fetchPromise;\n    const context = props.context ?? new window.AudioContext();\n    const gain = context.createGain();\n    const callersAccount = new Set();\n    const fetchAudioFile = (src, type, callback) => {\n        try {\n            void window\n                .fetch(src, {\n                method: 'GET',\n                headers: fetchHeaders\n            })\n                .then((response) => {\n                if (!response.ok) {\n                    throw new Error('ARWES bleep source could not be fetched.');\n                }\n                return response;\n            })\n                .then((response) => response.arrayBuffer())\n                .then((audioArrayBuffer) => context.decodeAudioData(audioArrayBuffer))\n                .then((audioBuffer) => {\n                buffer = audioBuffer;\n                duration = buffer.duration;\n            })\n                .catch((err) => {\n                isBufferError = true;\n                console.error(`ARWES bleep with source URL \"${src}\" and type \"${type}\" could not be used:`, err);\n            })\n                .then(() => {\n                isBufferLoading = false;\n                callback();\n            });\n        }\n        catch (err) {\n            isBufferError = true;\n            isBufferLoading = false;\n            console.error(`ARWES bleep throws when fetched.`);\n        }\n    };\n    function loadAudioBuffer() {\n        if (buffer || isBufferLoading || isBufferError) {\n            return;\n        }\n        if (!sources.length) {\n            isBufferError = true;\n            console.error('ARWES bleep must have at least one source with a valid audio file URL and type.');\n            return;\n        }\n        const audioTest = new window.Audio();\n        const source = sources.find((source) => {\n            if (isBrowserSafari && source.type.includes('audio/webm')) {\n                return false;\n            }\n            const support = audioTest.canPlayType(source.type || '');\n            return support === 'probably' || support === 'maybe';\n        });\n        if (!source) {\n            isBufferError = true;\n            console.error(`ARWES bleep sources \"${JSON.stringify(sources)}\" are not supported on this navigator.`);\n            return;\n        }\n        const { src, type } = source;\n        isBufferLoading = true;\n        fetchPromise = new Promise((resolve) => {\n            if (asyncLoad) {\n                asyncLoadCallbackId = window.setTimeout(() => {\n                    fetchAudioFile(src, type, resolve);\n                }, 0);\n            }\n            else {\n                fetchAudioFile(src, type, resolve);\n            }\n        });\n    }\n    function onUserAllowAudio() {\n        window.removeEventListener('click', onUserAllowAudio);\n        if (context.state === 'suspended') {\n            void context.resume();\n        }\n    }\n    function onUserWindowFocus() {\n        if (muteOnWindowBlur) {\n            isExternallyMuted = false;\n            update({});\n        }\n    }\n    function onUserWindowBlur() {\n        if (muteOnWindowBlur) {\n            isExternallyMuted = true;\n            update({});\n        }\n    }\n    function play(caller) {\n        const schedulePlay = () => {\n            if (Date.now() <= playbackCallbackTime + maxPlaybackDelay * 1000) {\n                play(caller);\n            }\n        };\n        playbackCallbackTime = Date.now();\n        if (isBufferError) {\n            return;\n        }\n        if (isBufferLoading) {\n            void fetchPromise.then(schedulePlay);\n            return;\n        }\n        if (!buffer) {\n            loadAudioBuffer();\n            void fetchPromise.then(schedulePlay);\n            return;\n        }\n        if (caller !== undefined) {\n            callersAccount.add(caller);\n        }\n        if (loop && isBufferPlaying) {\n            return;\n        }\n        if (context.state === 'suspended') {\n            window.addEventListener('click', onUserAllowAudio);\n            context\n                .resume()\n                .then(schedulePlay)\n                .catch((err) => {\n                const sourcesText = JSON.stringify(sources);\n                console.error(`ARWES bleep audio context with sources \"${sourcesText}\" could not be resumed to be played:`, err);\n            });\n            return;\n        }\n        if (bleepSource) {\n            bleepSource.stop();\n        }\n        bleepSource = createBleepSource({\n            context,\n            buffer,\n            gain,\n            loop,\n            onStop() {\n                isBufferPlaying = false;\n            }\n        });\n        isBufferPlaying = true;\n        bleepSource.start();\n    }\n    function stop(caller) {\n        if (!buffer) {\n            return;\n        }\n        if (caller !== undefined) {\n            callersAccount.delete(caller);\n        }\n        const canStop = loop ? !callersAccount.size : true;\n        if (canStop) {\n            if (bleepSource) {\n                bleepSource.stop();\n            }\n            isBufferPlaying = false;\n        }\n    }\n    function load() {\n        loadAudioBuffer();\n    }\n    function unload() {\n        if (bleepSource) {\n            bleepSource.stop();\n        }\n        bleepSource = null;\n        buffer = null;\n        isBufferLoading = false;\n        isBufferError = false;\n        isBufferPlaying = false;\n        window.clearTimeout(asyncLoadCallbackId);\n        window.removeEventListener('click', onUserAllowAudio);\n        window.removeEventListener('focus', onUserWindowFocus);\n        window.removeEventListener('blur', onUserWindowBlur);\n    }\n    function update(newProps) {\n        if (newProps.volume !== undefined) {\n            volume = Math.max(0, Math.min(1, newProps.volume));\n        }\n        if (newProps.muted !== undefined) {\n            muted = !!newProps.muted;\n        }\n        const newVolume = muted || isExternallyMuted ? 0 : volume;\n        if (newVolume !== gain.gain.value) {\n            gain.gain.value = newVolume;\n        }\n    }\n    const bleep = {};\n    const bleepAPI = {\n        duration: {\n            get: () => duration,\n            enumerable: true\n        },\n        volume: {\n            get: () => volume,\n            set: (volume) => update({ volume }),\n            enumerable: true\n        },\n        muted: {\n            get: () => muted,\n            set: (muted) => update({ muted }),\n            enumerable: true\n        },\n        isPlaying: {\n            get: () => isBufferPlaying,\n            enumerable: true\n        },\n        isLoaded: {\n            get: () => !!buffer,\n            enumerable: true\n        },\n        play: {\n            value: play,\n            enumerable: true\n        },\n        stop: {\n            value: stop,\n            enumerable: true\n        },\n        load: {\n            value: load,\n            enumerable: true\n        },\n        unload: {\n            value: unload,\n            enumerable: true\n        },\n        update: {\n            value: update,\n            enumerable: true\n        }\n    };\n    Object.defineProperties(bleep, bleepAPI);\n    if (masterGain) {\n        gain.connect(masterGain);\n    }\n    else {\n        gain.connect(context.destination);\n    }\n    update({ volume });\n    if (preload) {\n        loadAudioBuffer();\n    }\n    if (muteOnWindowBlur) {\n        window.addEventListener('focus', onUserWindowFocus);\n        window.addEventListener('blur', onUserWindowBlur);\n    }\n    return bleep;\n};\nexport { createBleep };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}