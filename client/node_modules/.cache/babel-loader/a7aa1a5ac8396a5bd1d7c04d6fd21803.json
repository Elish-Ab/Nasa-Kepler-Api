{"ast":null,"code":"import { filterProps } from '@arwes/tools';\nimport { animateDraw } from '@arwes/animated';\nconst defaultProps = {\n  styled: true,\n  animated: true,\n  padding: 0,\n  strokeWidth: 1,\n  cornerLength: 16\n};\nconst createFrameCornersSettings = props => {\n  const {\n    styled,\n    animated,\n    padding: p,\n    strokeWidth: cw,\n    cornerLength: cl\n  } = {\n    ...defaultProps,\n    ...(props ? filterProps(props) : null)\n  };\n  const co = cw / 2;\n  const linesPaths = [[['M', co + p, co + p], ['L', co + p, cl + p]], [['M', co + p, co + p], ['L', cl + p, co + p]], [['M', `100% - ${co} - ${p}`, co + p], ['L', `100% - ${cl} - ${p}`, co + p]], [['M', `100% - ${co} - ${p}`, co + p], ['L', `100% - ${co} - ${p}`, cl + p]], [['M', `100% - ${co} - ${p}`, `100% - ${co} - ${p}`], ['L', `100% - ${co} - ${p}`, `100% - ${cl} - ${p}`]], [['M', `100% - ${co} - ${p}`, `100% - ${co} - ${p}`], ['L', `100% - ${cl} - ${p}`, `100% - ${co} - ${p}`]], [['M', co + p, `100% - ${co} - ${p}`], ['L', cl + p, `100% - ${co} - ${p}`]], [['M', co + p, `100% - ${co} - ${p}`], ['L', co + p, `100% - ${cl} - ${p}`]]];\n  return {\n    elements: [{\n      type: 'rect',\n      name: 'bg',\n      style: {\n        filter: styled ? 'var(--arwes-frames-bg-filter)' : undefined,\n        fill: styled ? 'var(--arwes-frames-bg-color, currentcolor)' : undefined,\n        strokeWidth: 0\n      },\n      animated: animated && ['fade'],\n      x: p + cw,\n      y: p + cw,\n      width: `100% - ${(p + cw) * 2}`,\n      height: `100% - ${(p + cw) * 2}`\n    }, {\n      type: 'g',\n      style: {\n        filter: styled ? 'var(--arwes-frames-line-filter)' : undefined,\n        fill: styled ? 'none' : undefined,\n        stroke: styled ? 'var(--arwes-frames-line-color, currentcolor)' : undefined,\n        strokeLinecap: styled ? 'round' : undefined,\n        strokeLinejoin: styled ? 'round' : undefined,\n        strokeWidth: String(cw)\n      },\n      elements: linesPaths.map(path => ({\n        type: 'path',\n        name: 'line',\n        animated: animated && {\n          transitions: {\n            entering: ({\n              element,\n              duration\n            }) => animateDraw({\n              isEntering: true,\n              element: element,\n              duration\n            }),\n            exiting: ({\n              element,\n              duration\n            }) => animateDraw({\n              isEntering: false,\n              element: element,\n              duration\n            })\n          }\n        },\n        path\n      }))\n    }]\n  };\n};\nexport { createFrameCornersSettings };","map":{"version":3,"names":["filterProps","animateDraw","defaultProps","styled","animated","padding","strokeWidth","cornerLength","createFrameCornersSettings","props","p","cw","cl","co","linesPaths","elements","type","name","style","filter","undefined","fill","x","y","width","height","stroke","strokeLinecap","strokeLinejoin","String","map","path","transitions","entering","element","duration","isEntering","exiting"],"sources":["/home/elisha-a/Nasa/client/node_modules/@arwes/frames/build/esm/createFrameCornersSettings/createFrameCornersSettings.js"],"sourcesContent":["import { filterProps } from '@arwes/tools';\nimport { animateDraw } from '@arwes/animated';\nconst defaultProps = {\n    styled: true,\n    animated: true,\n    padding: 0,\n    strokeWidth: 1,\n    cornerLength: 16\n};\nconst createFrameCornersSettings = (props) => {\n    const { styled, animated, padding: p, strokeWidth: cw, cornerLength: cl } = { ...defaultProps, ...(props ? filterProps(props) : null) };\n    const co = cw / 2;\n    const linesPaths = [\n        [\n            ['M', co + p, co + p],\n            ['L', co + p, cl + p]\n        ],\n        [\n            ['M', co + p, co + p],\n            ['L', cl + p, co + p]\n        ],\n        [\n            ['M', `100% - ${co} - ${p}`, co + p],\n            ['L', `100% - ${cl} - ${p}`, co + p]\n        ],\n        [\n            ['M', `100% - ${co} - ${p}`, co + p],\n            ['L', `100% - ${co} - ${p}`, cl + p]\n        ],\n        [\n            ['M', `100% - ${co} - ${p}`, `100% - ${co} - ${p}`],\n            ['L', `100% - ${co} - ${p}`, `100% - ${cl} - ${p}`]\n        ],\n        [\n            ['M', `100% - ${co} - ${p}`, `100% - ${co} - ${p}`],\n            ['L', `100% - ${cl} - ${p}`, `100% - ${co} - ${p}`]\n        ],\n        [\n            ['M', co + p, `100% - ${co} - ${p}`],\n            ['L', cl + p, `100% - ${co} - ${p}`]\n        ],\n        [\n            ['M', co + p, `100% - ${co} - ${p}`],\n            ['L', co + p, `100% - ${cl} - ${p}`]\n        ]\n    ];\n    return {\n        elements: [\n            {\n                type: 'rect',\n                name: 'bg',\n                style: {\n                    filter: styled ? 'var(--arwes-frames-bg-filter)' : undefined,\n                    fill: styled ? 'var(--arwes-frames-bg-color, currentcolor)' : undefined,\n                    strokeWidth: 0\n                },\n                animated: animated && ['fade'],\n                x: p + cw,\n                y: p + cw,\n                width: `100% - ${(p + cw) * 2}`,\n                height: `100% - ${(p + cw) * 2}`\n            },\n            {\n                type: 'g',\n                style: {\n                    filter: styled ? 'var(--arwes-frames-line-filter)' : undefined,\n                    fill: styled ? 'none' : undefined,\n                    stroke: styled ? 'var(--arwes-frames-line-color, currentcolor)' : undefined,\n                    strokeLinecap: styled ? 'round' : undefined,\n                    strokeLinejoin: styled ? 'round' : undefined,\n                    strokeWidth: String(cw)\n                },\n                elements: linesPaths.map((path) => ({\n                    type: 'path',\n                    name: 'line',\n                    animated: animated && {\n                        transitions: {\n                            entering: ({ element, duration }) => animateDraw({ isEntering: true, element: element, duration }),\n                            exiting: ({ element, duration }) => animateDraw({ isEntering: false, element: element, duration })\n                        }\n                    },\n                    path\n                }))\n            }\n        ]\n    };\n};\nexport { createFrameCornersSettings };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}