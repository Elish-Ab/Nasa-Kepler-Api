{"ast":null,"code":"import { filterProps } from '@arwes/tools';\nimport { animate } from 'motion';\nconst defaultProps = {\n  styled: true,\n  animated: true,\n  padding: 0,\n  strokeWidth: 1,\n  decoWidth: 4,\n  direction: 'horizontal',\n  align: 'left',\n  contentLength: 0\n};\nconst createFrameHeaderSettings = props => {\n  const {\n    styled,\n    animated,\n    padding: p,\n    strokeWidth,\n    decoWidth,\n    direction,\n    align,\n    contentLength\n  } = {\n    ...defaultProps,\n    ...(props ? filterProps(props) : null)\n  };\n  const strokeOffset = strokeWidth / 2;\n  const lineStyle = {\n    filter: styled ? 'var(--arwes-frames-line-filter)' : undefined,\n    stroke: styled ? 'var(--arwes-frames-line-color, currentcolor)' : undefined,\n    fill: styled ? 'none' : undefined,\n    strokeWidth: String(strokeWidth)\n  };\n  const decoDashStyle = {\n    filter: styled ? 'var(--arwes-frames-deco-filter)' : undefined,\n    stroke: styled ? 'var(--arwes-frames-deco-color, currentcolor)' : undefined,\n    fill: styled ? 'none' : undefined,\n    strokeWidth: String(strokeWidth)\n  };\n  const decoBoxesStyle = {\n    filter: styled ? 'var(--arwes-frames-deco-filter)' : undefined,\n    fill: styled ? 'var(--arwes-frames-deco-color, currentcolor)' : undefined,\n    strokeWidth: '0'\n  };\n  const decoDashAnimated = animated ? {\n    transitions: {\n      entering: ({\n        element,\n        duration\n      }) => animate(element, {\n        opacity: [0, 1, 0.5, 1]\n      }, {\n        duration: duration * 0.4\n      }),\n      exiting: ({\n        element,\n        duration\n      }) => animate(element, {\n        opacity: [1, 0, 0.5, 0]\n      }, {\n        duration: duration * 0.4,\n        delay: duration * 0.6\n      })\n    }\n  } : undefined;\n  const lineAnimated = animated ? ['draw'] : undefined;\n  const decoBoxesAnimated = animated ? {\n    transitions: {\n      entering: ({\n        element,\n        duration\n      }) => animate(element, {\n        opacity: [0, 1, 0.5, 1]\n      }, {\n        delay: duration * 0.6,\n        duration: duration * 0.4\n      }),\n      exiting: {\n        opacity: [1, 0, 0.5, 0]\n      }\n    }\n  } : undefined;\n  const verticalBoxes = [{\n    type: 'rect',\n    x: 0,\n    y: 0,\n    width: '100%',\n    height: '20%'\n  }, {\n    type: 'rect',\n    x: 0,\n    y: '40%',\n    width: '100%',\n    height: '20%'\n  }, {\n    type: 'rect',\n    x: 0,\n    y: '80%',\n    width: '100%',\n    height: '20%'\n  }];\n  if (direction === 'vertical') {\n    if (align === 'bottom') {\n      return {\n        elements: [{\n          type: 'path',\n          name: 'deco',\n          style: decoDashStyle,\n          animated: decoDashAnimated,\n          path: [['M', contentLength ? `100% - ${p + strokeOffset}` : p + strokeOffset, `100% - ${p}`], ['v', -decoWidth * 2], ['m', 0, -decoWidth], ['v', -decoWidth * 2]]\n        }, {\n          type: 'path',\n          name: 'line',\n          style: lineStyle,\n          animated: lineAnimated,\n          path: ({\n            width,\n            height\n          }) => ['M', contentLength ? width - (p + strokeOffset) : p + strokeOffset, height - (p + decoWidth * 6), 'v', -Math.max(0, contentLength - decoWidth * 6), 'L', contentLength ? width * 0.5 : p + strokeOffset, height - (p + contentLength + width * 0.5), 'V', p + decoWidth * 6.5].join(' ')\n        }, {\n          type: 'g',\n          name: 'deco',\n          style: {\n            ...decoBoxesStyle,\n            skewY: -45,\n            transformOrigin: contentLength ? 'top center' : 'top left'\n          },\n          animated: decoBoxesAnimated,\n          elements: [{\n            type: 'svg',\n            viewBox: `0 0 ${decoWidth * 2} ${decoWidth * 5}`,\n            x: contentLength ? `50% - ${strokeOffset}` : p,\n            y: p + decoWidth * 2,\n            width: decoWidth * 2,\n            height: decoWidth * 5,\n            elements: verticalBoxes\n          }]\n        }]\n      };\n    }\n    return {\n      elements: [{\n        type: 'path',\n        name: 'deco',\n        style: decoDashStyle,\n        animated: decoDashAnimated,\n        path: [['M', contentLength ? `100% - ${p + strokeOffset}` : p + strokeOffset, p], ['v', decoWidth * 2], ['m', 0, decoWidth], ['v', decoWidth * 2]]\n      }, {\n        type: 'path',\n        name: 'line',\n        style: lineStyle,\n        animated: lineAnimated,\n        path: ({\n          width,\n          height\n        }) => ['M', contentLength ? width - (p + strokeOffset) : p + strokeOffset, p + decoWidth * 6, 'v', Math.max(0, contentLength - decoWidth * 6), 'L', contentLength ? width * 0.5 : p + strokeOffset, p + contentLength + width * 0.5, 'V', height - (p + decoWidth * 6.5)].join(' ')\n      }, {\n        type: 'g',\n        name: 'deco',\n        style: {\n          ...decoBoxesStyle,\n          transformOrigin: contentLength ? 'bottom center' : 'bottom left',\n          skewY: 45\n        },\n        animated: decoBoxesAnimated,\n        elements: [{\n          type: 'svg',\n          viewBox: `0 0 ${decoWidth * 2} ${decoWidth * 5}`,\n          x: contentLength ? `50% - ${strokeOffset}` : p,\n          y: `100% - ${p + decoWidth * 7}`,\n          width: decoWidth * 2,\n          height: decoWidth * 5,\n          elements: verticalBoxes\n        }]\n      }]\n    };\n  }\n  const horizontalBoxes = [{\n    type: 'rect',\n    x: 0,\n    y: 0,\n    width: '20%',\n    height: '100%'\n  }, {\n    type: 'rect',\n    x: '40%',\n    y: 0,\n    width: '20%',\n    height: '100%'\n  }, {\n    type: 'rect',\n    x: '80%',\n    y: 0,\n    width: '20%',\n    height: '100%'\n  }];\n  if (align === 'right') {\n    return {\n      elements: [{\n        type: 'path',\n        name: 'deco',\n        style: decoDashStyle,\n        animated: decoDashAnimated,\n        path: [['M', `100% - ${p}`, contentLength ? `100% - ${p + strokeOffset}` : p + strokeOffset], ['h', -decoWidth * 2], ['m', -decoWidth, 0], ['h', -decoWidth * 2]]\n      }, {\n        type: 'path',\n        name: 'line',\n        style: lineStyle,\n        animated: lineAnimated,\n        path: ({\n          width,\n          height\n        }) => ['M', width - (p + decoWidth * 6), contentLength ? height - (p + strokeOffset) : p + strokeOffset, 'h', -Math.max(0, contentLength - decoWidth * 6), 'L', width - (p + contentLength + height * 0.5), contentLength ? height * 0.5 : p + strokeOffset, 'H', p + decoWidth * 6.5].join(' ')\n      }, {\n        type: 'g',\n        name: 'deco',\n        animated: decoBoxesAnimated,\n        style: {\n          ...decoBoxesStyle,\n          transformOrigin: contentLength ? 'left center' : 'left top',\n          skewX: -45\n        },\n        elements: [{\n          type: 'svg',\n          viewBox: `0 0 ${decoWidth * 5} ${decoWidth * 2}`,\n          x: p + decoWidth * 2,\n          y: contentLength ? `50% - ${strokeOffset}` : p,\n          width: decoWidth * 5,\n          height: decoWidth * 2,\n          elements: horizontalBoxes\n        }]\n      }]\n    };\n  }\n  return {\n    elements: [{\n      type: 'path',\n      name: 'deco',\n      style: decoDashStyle,\n      animated: decoDashAnimated,\n      path: [['M', p, contentLength ? `100% - ${p + strokeOffset}` : p + strokeOffset], ['h', decoWidth * 2], ['m', decoWidth, 0], ['h', decoWidth * 2]]\n    }, {\n      type: 'path',\n      name: 'line',\n      style: lineStyle,\n      animated: lineAnimated,\n      path: ({\n        width,\n        height\n      }) => ['M', p + decoWidth * 6, contentLength ? height - (p + strokeOffset) : p + strokeOffset, 'h', Math.max(0, contentLength - decoWidth * 6), 'L', p + contentLength + height * 0.5, contentLength ? height * 0.5 : p + strokeOffset, 'H', width - (p + decoWidth * 6.5)].join(' ')\n    }, {\n      type: 'g',\n      name: 'deco',\n      animated: decoBoxesAnimated,\n      style: {\n        ...decoBoxesStyle,\n        transformOrigin: contentLength ? 'right center' : 'right top',\n        skewX: 45\n      },\n      elements: [{\n        type: 'svg',\n        viewBox: `0 0 ${decoWidth * 5} ${decoWidth * 2}`,\n        x: `100% - ${p + decoWidth * 7}`,\n        y: contentLength ? `50% - ${strokeOffset}` : p,\n        width: decoWidth * 5,\n        height: decoWidth * 2,\n        elements: horizontalBoxes\n      }]\n    }]\n  };\n};\nexport { createFrameHeaderSettings };","map":{"version":3,"names":["filterProps","animate","defaultProps","styled","animated","padding","strokeWidth","decoWidth","direction","align","contentLength","createFrameHeaderSettings","props","p","strokeOffset","lineStyle","filter","undefined","stroke","fill","String","decoDashStyle","decoBoxesStyle","decoDashAnimated","transitions","entering","element","duration","opacity","exiting","delay","lineAnimated","decoBoxesAnimated","verticalBoxes","type","x","y","width","height","elements","name","style","path","Math","max","join","skewY","transformOrigin","viewBox","horizontalBoxes","skewX"],"sources":["/home/elisha-a/Nasa/client/node_modules/@arwes/frames/build/esm/createFrameHeaderSettings/createFrameHeaderSettings.js"],"sourcesContent":["import { filterProps } from '@arwes/tools';\nimport { animate } from 'motion';\nconst defaultProps = {\n    styled: true,\n    animated: true,\n    padding: 0,\n    strokeWidth: 1,\n    decoWidth: 4,\n    direction: 'horizontal',\n    align: 'left',\n    contentLength: 0\n};\nconst createFrameHeaderSettings = (props) => {\n    const { styled, animated, padding: p, strokeWidth, decoWidth, direction, align, contentLength } = { ...defaultProps, ...(props ? filterProps(props) : null) };\n    const strokeOffset = strokeWidth / 2;\n    const lineStyle = {\n        filter: styled ? 'var(--arwes-frames-line-filter)' : undefined,\n        stroke: styled ? 'var(--arwes-frames-line-color, currentcolor)' : undefined,\n        fill: styled ? 'none' : undefined,\n        strokeWidth: String(strokeWidth)\n    };\n    const decoDashStyle = {\n        filter: styled ? 'var(--arwes-frames-deco-filter)' : undefined,\n        stroke: styled ? 'var(--arwes-frames-deco-color, currentcolor)' : undefined,\n        fill: styled ? 'none' : undefined,\n        strokeWidth: String(strokeWidth)\n    };\n    const decoBoxesStyle = {\n        filter: styled ? 'var(--arwes-frames-deco-filter)' : undefined,\n        fill: styled ? 'var(--arwes-frames-deco-color, currentcolor)' : undefined,\n        strokeWidth: '0'\n    };\n    const decoDashAnimated = animated\n        ? {\n            transitions: {\n                entering: ({ element, duration }) => animate(element, { opacity: [0, 1, 0.5, 1] }, { duration: duration * 0.4 }),\n                exiting: ({ element, duration }) => animate(element, { opacity: [1, 0, 0.5, 0] }, { duration: duration * 0.4, delay: duration * 0.6 })\n            }\n        }\n        : undefined;\n    const lineAnimated = animated ? ['draw'] : undefined;\n    const decoBoxesAnimated = animated\n        ? {\n            transitions: {\n                entering: ({ element, duration }) => animate(element, { opacity: [0, 1, 0.5, 1] }, { delay: duration * 0.6, duration: duration * 0.4 }),\n                exiting: { opacity: [1, 0, 0.5, 0] }\n            }\n        }\n        : undefined;\n    const verticalBoxes = [\n        {\n            type: 'rect',\n            x: 0,\n            y: 0,\n            width: '100%',\n            height: '20%'\n        },\n        {\n            type: 'rect',\n            x: 0,\n            y: '40%',\n            width: '100%',\n            height: '20%'\n        },\n        {\n            type: 'rect',\n            x: 0,\n            y: '80%',\n            width: '100%',\n            height: '20%'\n        }\n    ];\n    if (direction === 'vertical') {\n        if (align === 'bottom') {\n            return {\n                elements: [\n                    {\n                        type: 'path',\n                        name: 'deco',\n                        style: decoDashStyle,\n                        animated: decoDashAnimated,\n                        path: [\n                            ['M', contentLength ? `100% - ${p + strokeOffset}` : p + strokeOffset, `100% - ${p}`],\n                            ['v', -decoWidth * 2],\n                            ['m', 0, -decoWidth],\n                            ['v', -decoWidth * 2]\n                        ]\n                    },\n                    {\n                        type: 'path',\n                        name: 'line',\n                        style: lineStyle,\n                        animated: lineAnimated,\n                        path: ({ width, height }) => [\n                            'M',\n                            contentLength ? width - (p + strokeOffset) : p + strokeOffset,\n                            height - (p + decoWidth * 6),\n                            'v',\n                            -Math.max(0, contentLength - decoWidth * 6),\n                            'L',\n                            contentLength ? width * 0.5 : p + strokeOffset,\n                            height - (p + contentLength + width * 0.5),\n                            'V',\n                            p + decoWidth * 6.5\n                        ].join(' ')\n                    },\n                    {\n                        type: 'g',\n                        name: 'deco',\n                        style: {\n                            ...decoBoxesStyle,\n                            skewY: -45,\n                            transformOrigin: contentLength ? 'top center' : 'top left'\n                        },\n                        animated: decoBoxesAnimated,\n                        elements: [\n                            {\n                                type: 'svg',\n                                viewBox: `0 0 ${decoWidth * 2} ${decoWidth * 5}`,\n                                x: contentLength ? `50% - ${strokeOffset}` : p,\n                                y: p + decoWidth * 2,\n                                width: decoWidth * 2,\n                                height: decoWidth * 5,\n                                elements: verticalBoxes\n                            }\n                        ]\n                    }\n                ]\n            };\n        }\n        return {\n            elements: [\n                {\n                    type: 'path',\n                    name: 'deco',\n                    style: decoDashStyle,\n                    animated: decoDashAnimated,\n                    path: [\n                        ['M', contentLength ? `100% - ${p + strokeOffset}` : p + strokeOffset, p],\n                        ['v', decoWidth * 2],\n                        ['m', 0, decoWidth],\n                        ['v', decoWidth * 2]\n                    ]\n                },\n                {\n                    type: 'path',\n                    name: 'line',\n                    style: lineStyle,\n                    animated: lineAnimated,\n                    path: ({ width, height }) => [\n                        'M',\n                        contentLength ? width - (p + strokeOffset) : p + strokeOffset,\n                        p + decoWidth * 6,\n                        'v',\n                        Math.max(0, contentLength - decoWidth * 6),\n                        'L',\n                        contentLength ? width * 0.5 : p + strokeOffset,\n                        p + contentLength + width * 0.5,\n                        'V',\n                        height - (p + decoWidth * 6.5)\n                    ].join(' ')\n                },\n                {\n                    type: 'g',\n                    name: 'deco',\n                    style: {\n                        ...decoBoxesStyle,\n                        transformOrigin: contentLength ? 'bottom center' : 'bottom left',\n                        skewY: 45\n                    },\n                    animated: decoBoxesAnimated,\n                    elements: [\n                        {\n                            type: 'svg',\n                            viewBox: `0 0 ${decoWidth * 2} ${decoWidth * 5}`,\n                            x: contentLength ? `50% - ${strokeOffset}` : p,\n                            y: `100% - ${p + decoWidth * 7}`,\n                            width: decoWidth * 2,\n                            height: decoWidth * 5,\n                            elements: verticalBoxes\n                        }\n                    ]\n                }\n            ]\n        };\n    }\n    const horizontalBoxes = [\n        {\n            type: 'rect',\n            x: 0,\n            y: 0,\n            width: '20%',\n            height: '100%'\n        },\n        {\n            type: 'rect',\n            x: '40%',\n            y: 0,\n            width: '20%',\n            height: '100%'\n        },\n        {\n            type: 'rect',\n            x: '80%',\n            y: 0,\n            width: '20%',\n            height: '100%'\n        }\n    ];\n    if (align === 'right') {\n        return {\n            elements: [\n                {\n                    type: 'path',\n                    name: 'deco',\n                    style: decoDashStyle,\n                    animated: decoDashAnimated,\n                    path: [\n                        ['M', `100% - ${p}`, contentLength ? `100% - ${p + strokeOffset}` : p + strokeOffset],\n                        ['h', -decoWidth * 2],\n                        ['m', -decoWidth, 0],\n                        ['h', -decoWidth * 2]\n                    ]\n                },\n                {\n                    type: 'path',\n                    name: 'line',\n                    style: lineStyle,\n                    animated: lineAnimated,\n                    path: ({ width, height }) => [\n                        'M',\n                        width - (p + decoWidth * 6),\n                        contentLength ? height - (p + strokeOffset) : p + strokeOffset,\n                        'h',\n                        -Math.max(0, contentLength - decoWidth * 6),\n                        'L',\n                        width - (p + contentLength + height * 0.5),\n                        contentLength ? height * 0.5 : p + strokeOffset,\n                        'H',\n                        p + decoWidth * 6.5\n                    ].join(' ')\n                },\n                {\n                    type: 'g',\n                    name: 'deco',\n                    animated: decoBoxesAnimated,\n                    style: {\n                        ...decoBoxesStyle,\n                        transformOrigin: contentLength ? 'left center' : 'left top',\n                        skewX: -45\n                    },\n                    elements: [\n                        {\n                            type: 'svg',\n                            viewBox: `0 0 ${decoWidth * 5} ${decoWidth * 2}`,\n                            x: p + decoWidth * 2,\n                            y: contentLength ? `50% - ${strokeOffset}` : p,\n                            width: decoWidth * 5,\n                            height: decoWidth * 2,\n                            elements: horizontalBoxes\n                        }\n                    ]\n                }\n            ]\n        };\n    }\n    return {\n        elements: [\n            {\n                type: 'path',\n                name: 'deco',\n                style: decoDashStyle,\n                animated: decoDashAnimated,\n                path: [\n                    ['M', p, contentLength ? `100% - ${p + strokeOffset}` : p + strokeOffset],\n                    ['h', decoWidth * 2],\n                    ['m', decoWidth, 0],\n                    ['h', decoWidth * 2]\n                ]\n            },\n            {\n                type: 'path',\n                name: 'line',\n                style: lineStyle,\n                animated: lineAnimated,\n                path: ({ width, height }) => [\n                    'M',\n                    p + decoWidth * 6,\n                    contentLength ? height - (p + strokeOffset) : p + strokeOffset,\n                    'h',\n                    Math.max(0, contentLength - decoWidth * 6),\n                    'L',\n                    p + contentLength + height * 0.5,\n                    contentLength ? height * 0.5 : p + strokeOffset,\n                    'H',\n                    width - (p + decoWidth * 6.5)\n                ].join(' ')\n            },\n            {\n                type: 'g',\n                name: 'deco',\n                animated: decoBoxesAnimated,\n                style: {\n                    ...decoBoxesStyle,\n                    transformOrigin: contentLength ? 'right center' : 'right top',\n                    skewX: 45\n                },\n                elements: [\n                    {\n                        type: 'svg',\n                        viewBox: `0 0 ${decoWidth * 5} ${decoWidth * 2}`,\n                        x: `100% - ${p + decoWidth * 7}`,\n                        y: contentLength ? `50% - ${strokeOffset}` : p,\n                        width: decoWidth * 5,\n                        height: decoWidth * 2,\n                        elements: horizontalBoxes\n                    }\n                ]\n            }\n        ]\n    };\n};\nexport { createFrameHeaderSettings };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}