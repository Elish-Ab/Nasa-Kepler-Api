{"ast":null,"code":"const ID_DEFAULT = '';\nfunction createTOScheduler() {\n  const ledger = new Map();\n  const isPending = (id = ID_DEFAULT) => {\n    return ledger.has(id);\n  };\n  const stop = (id = ID_DEFAULT) => {\n    const cancelSchedule = ledger.get(id);\n    if (cancelSchedule) {\n      cancelSchedule();\n    }\n    ledger.delete(id);\n  };\n  const stopAll = () => {\n    Array.from(ledger.keys()).forEach(stop);\n  };\n  const start = (a, b, c) => {\n    const id = c ? a : ID_DEFAULT;\n    const delay = (c ? b : a) * 1000;\n    const callback = c || b;\n    stop(id);\n    const timeoutId = setTimeout(() => {\n      ledger.delete(id);\n      callback();\n    }, delay);\n    ledger.set(id, () => {\n      clearTimeout(timeoutId);\n    });\n  };\n  return Object.freeze({\n    isPending,\n    stop,\n    stopAll,\n    start\n  });\n}\nexport { createTOScheduler };","map":{"version":3,"names":["ID_DEFAULT","createTOScheduler","ledger","Map","isPending","id","has","stop","cancelSchedule","get","delete","stopAll","Array","from","keys","forEach","start","a","b","c","delay","callback","timeoutId","setTimeout","set","clearTimeout","Object","freeze"],"sources":["/home/elisha-a/Nasa/client/node_modules/@arwes/tools/build/esm/createTOScheduler/createTOScheduler.js"],"sourcesContent":["const ID_DEFAULT = '';\nfunction createTOScheduler() {\n    const ledger = new Map();\n    const isPending = (id = ID_DEFAULT) => {\n        return ledger.has(id);\n    };\n    const stop = (id = ID_DEFAULT) => {\n        const cancelSchedule = ledger.get(id);\n        if (cancelSchedule) {\n            cancelSchedule();\n        }\n        ledger.delete(id);\n    };\n    const stopAll = () => {\n        Array.from(ledger.keys()).forEach(stop);\n    };\n    const start = (a, b, c) => {\n        const id = c ? a : ID_DEFAULT;\n        const delay = (c ? b : a) * 1000;\n        const callback = c || b;\n        stop(id);\n        const timeoutId = setTimeout(() => {\n            ledger.delete(id);\n            callback();\n        }, delay);\n        ledger.set(id, () => {\n            clearTimeout(timeoutId);\n        });\n    };\n    return Object.freeze({ isPending, stop, stopAll, start });\n}\nexport { createTOScheduler };\n"],"mappings":"AAAA,MAAMA,UAAU,GAAG,EAAE;AACrB,SAASC,iBAAiBA,CAAA,EAAG;EACzB,MAAMC,MAAM,GAAG,IAAIC,GAAG,CAAC,CAAC;EACxB,MAAMC,SAAS,GAAGA,CAACC,EAAE,GAAGL,UAAU,KAAK;IACnC,OAAOE,MAAM,CAACI,GAAG,CAACD,EAAE,CAAC;EACzB,CAAC;EACD,MAAME,IAAI,GAAGA,CAACF,EAAE,GAAGL,UAAU,KAAK;IAC9B,MAAMQ,cAAc,GAAGN,MAAM,CAACO,GAAG,CAACJ,EAAE,CAAC;IACrC,IAAIG,cAAc,EAAE;MAChBA,cAAc,CAAC,CAAC;IACpB;IACAN,MAAM,CAACQ,MAAM,CAACL,EAAE,CAAC;EACrB,CAAC;EACD,MAAMM,OAAO,GAAGA,CAAA,KAAM;IAClBC,KAAK,CAACC,IAAI,CAACX,MAAM,CAACY,IAAI,CAAC,CAAC,CAAC,CAACC,OAAO,CAACR,IAAI,CAAC;EAC3C,CAAC;EACD,MAAMS,KAAK,GAAGA,CAACC,CAAC,EAAEC,CAAC,EAAEC,CAAC,KAAK;IACvB,MAAMd,EAAE,GAAGc,CAAC,GAAGF,CAAC,GAAGjB,UAAU;IAC7B,MAAMoB,KAAK,GAAG,CAACD,CAAC,GAAGD,CAAC,GAAGD,CAAC,IAAI,IAAI;IAChC,MAAMI,QAAQ,GAAGF,CAAC,IAAID,CAAC;IACvBX,IAAI,CAACF,EAAE,CAAC;IACR,MAAMiB,SAAS,GAAGC,UAAU,CAAC,MAAM;MAC/BrB,MAAM,CAACQ,MAAM,CAACL,EAAE,CAAC;MACjBgB,QAAQ,CAAC,CAAC;IACd,CAAC,EAAED,KAAK,CAAC;IACTlB,MAAM,CAACsB,GAAG,CAACnB,EAAE,EAAE,MAAM;MACjBoB,YAAY,CAACH,SAAS,CAAC;IAC3B,CAAC,CAAC;EACN,CAAC;EACD,OAAOI,MAAM,CAACC,MAAM,CAAC;IAAEvB,SAAS;IAAEG,IAAI;IAAEI,OAAO;IAAEK;EAAM,CAAC,CAAC;AAC7D;AACA,SAASf,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module"}