{"ast":null,"code":"const toCSSSize = val => typeof val === 'number' ? `${val}px` : val;\nconst styleFrameClipKranox = props => {\n  const {\n    squareSize = '16px',\n    strokeWidth = '1px',\n    smallLineLength = '16px',\n    largeLineLength = '64px',\n    padding = '0px'\n  } = props ?? {};\n  const p = toCSSSize(padding);\n  const ss = toCSSSize(squareSize);\n  const so = `calc(${toCSSSize(strokeWidth)} / 2)`;\n  const sll = toCSSSize(smallLineLength);\n  const lll = toCSSSize(largeLineLength);\n  const lines = [[`${so} + ${p} + calc(${ss} * 2)`, `100% - calc(${so} + ${p})`], [`${so} + ${p} + ${ss}`, `100% - calc(${so} + ${p} + ${ss})`], [`${so} + ${p} + ${ss}`, `${so} + ${p} + ${lll} + calc(${ss} * 3) + ${sll}`], [`${so} + ${p}`, `${so} + ${p} + ${lll} + calc(${ss} * 2) + ${sll}`], [`${so} + ${p}`, `${so} + ${p} + calc(${ss} * 2) + ${sll}`], [`${so} + ${p} + ${ss}`, `${so} + ${p} + ${sll} + ${ss}`], [`${so} + ${p} + ${ss}`, `${so} + ${p} + ${ss}`], [`${so} + ${p} + calc(${ss} * 2)`, `${so} + ${p}`], [`100% - calc(${so} + ${p} + calc(${ss} * 2))`, `${so} + ${p}`], [`100% - calc(${so} + ${p} + ${ss})`, `${so} + ${p} + ${ss}`], [`100% - calc(${so} + ${p} + ${ss})`, `100% - calc(${so} + ${p} + calc(${ss} * 3) + ${sll} + ${lll})`], [`100% - calc(${so} + ${p})`, `100% - calc(${so} + ${p} + calc(${ss} * 2) + ${sll} + ${lll})`], [`100% - calc(${so} + ${p})`, `100% - calc(${so} + ${p} + calc(${ss} * 2) + ${sll})`], [`100% - calc(${so} + ${p} + ${ss})`, `100% - calc(${so} + ${p} + ${ss} + ${sll})`], [`100% - calc(${so} + ${p} + ${ss})`, `100% - calc(${so} + ${p} + ${ss})`], [`100% - calc(${so} + ${p} + calc(${ss} * 2))`, `100% - calc(${so} + ${p})`]];\n  return `polygon(\\n  ${lines.map(([x, y]) => `calc(${x}) calc(${y})`).join(',\\n  ')}\\n)`;\n};\nexport { styleFrameClipKranox };","map":{"version":3,"names":["toCSSSize","val","styleFrameClipKranox","props","squareSize","strokeWidth","smallLineLength","largeLineLength","padding","p","ss","so","sll","lll","lines","map","x","y","join"],"sources":["/home/elisha-a/Nasa/client/node_modules/@arwes/frames/build/esm/styleFrameClipKranox/styleFrameClipKranox.js"],"sourcesContent":["const toCSSSize = (val) => (typeof val === 'number' ? `${val}px` : val);\nconst styleFrameClipKranox = (props) => {\n    const { squareSize = '16px', strokeWidth = '1px', smallLineLength = '16px', largeLineLength = '64px', padding = '0px' } = props ?? {};\n    const p = toCSSSize(padding);\n    const ss = toCSSSize(squareSize);\n    const so = `calc(${toCSSSize(strokeWidth)} / 2)`;\n    const sll = toCSSSize(smallLineLength);\n    const lll = toCSSSize(largeLineLength);\n    const lines = [\n        [`${so} + ${p} + calc(${ss} * 2)`, `100% - calc(${so} + ${p})`],\n        [`${so} + ${p} + ${ss}`, `100% - calc(${so} + ${p} + ${ss})`],\n        [`${so} + ${p} + ${ss}`, `${so} + ${p} + ${lll} + calc(${ss} * 3) + ${sll}`],\n        [`${so} + ${p}`, `${so} + ${p} + ${lll} + calc(${ss} * 2) + ${sll}`],\n        [`${so} + ${p}`, `${so} + ${p} + calc(${ss} * 2) + ${sll}`],\n        [`${so} + ${p} + ${ss}`, `${so} + ${p} + ${sll} + ${ss}`],\n        [`${so} + ${p} + ${ss}`, `${so} + ${p} + ${ss}`],\n        [`${so} + ${p} + calc(${ss} * 2)`, `${so} + ${p}`],\n        [`100% - calc(${so} + ${p} + calc(${ss} * 2))`, `${so} + ${p}`],\n        [`100% - calc(${so} + ${p} + ${ss})`, `${so} + ${p} + ${ss}`],\n        [\n            `100% - calc(${so} + ${p} + ${ss})`,\n            `100% - calc(${so} + ${p} + calc(${ss} * 3) + ${sll} + ${lll})`\n        ],\n        [`100% - calc(${so} + ${p})`, `100% - calc(${so} + ${p} + calc(${ss} * 2) + ${sll} + ${lll})`],\n        [`100% - calc(${so} + ${p})`, `100% - calc(${so} + ${p} + calc(${ss} * 2) + ${sll})`],\n        [`100% - calc(${so} + ${p} + ${ss})`, `100% - calc(${so} + ${p} + ${ss} + ${sll})`],\n        [`100% - calc(${so} + ${p} + ${ss})`, `100% - calc(${so} + ${p} + ${ss})`],\n        [`100% - calc(${so} + ${p} + calc(${ss} * 2))`, `100% - calc(${so} + ${p})`]\n    ];\n    return `polygon(\\n  ${lines.map(([x, y]) => `calc(${x}) calc(${y})`).join(',\\n  ')}\\n)`;\n};\nexport { styleFrameClipKranox };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}