{"ast":null,"code":"import { filterProps } from '@arwes/tools';\nconst defaultProps = {\n  styled: true,\n  animated: true,\n  padding: 0,\n  largeLineWidth: 1,\n  smallLineWidth: 1,\n  smallLineLength: 16\n};\nconst createFrameLinesSettings = props => {\n  const {\n    styled,\n    animated,\n    padding: p,\n    largeLineWidth,\n    smallLineWidth,\n    smallLineLength\n  } = {\n    ...defaultProps,\n    ...(props ? filterProps(props) : null)\n  };\n  const largePolylines = [[['M', p, p + largeLineWidth / 2], ['H', '50% + 0.1']], [['M', `100% - ${p + largeLineWidth / 2}`, p + largeLineWidth / 2], ['H', '50% - 0.1']], [['M', p + largeLineWidth / 2, `100% - ${p + largeLineWidth / 2}`], ['H', '50% + 0.1']], [['M', `100% - ${p + largeLineWidth / 2}`, `100% - ${p + largeLineWidth / 2}`], ['H', '50% - 0.1']]];\n  const smallPolylines = [[['M', p, p + smallLineWidth / 2], ['h', smallLineLength]], [['M', `100% - ${p}`, p + smallLineWidth / 2], ['h', -smallLineLength]], [['M', p, `100% - ${p + smallLineWidth / 2}`], ['h', smallLineLength]], [['M', `100% - ${p}`, `100% - ${p + smallLineWidth / 2}`], ['h', -smallLineLength]]];\n  return {\n    elements: [{\n      type: 'rect',\n      name: 'bg',\n      style: {\n        filter: styled ? 'var(--arwes-frames-bg-filter)' : undefined,\n        fill: styled ? 'var(--arwes-frames-bg-color, currentcolor)' : undefined,\n        strokeWidth: 0\n      },\n      animated: animated && ['fade'],\n      x: p,\n      y: p,\n      width: `100% - ${p * 2}`,\n      height: `100% - ${p * 2}`\n    }, {\n      type: 'g',\n      style: {\n        filter: styled ? 'var(--arwes-frames-line-filter)' : undefined,\n        fill: styled ? 'none' : undefined,\n        stroke: styled ? 'var(--arwes-frames-line-color, currentcolor)' : undefined,\n        strokeWidth: String(largeLineWidth)\n      },\n      elements: largePolylines.map(polyline => ({\n        name: 'line',\n        animated: animated && ['draw'],\n        path: polyline\n      }))\n    }, {\n      type: 'g',\n      style: {\n        filter: styled ? 'var(--arwes-frames-deco-filter)' : undefined,\n        fill: styled ? 'none' : undefined,\n        stroke: styled ? 'var(--arwes-frames-deco-color, currentcolor)' : undefined,\n        strokeWidth: String(smallLineWidth)\n      },\n      animated: animated && {\n        transitions: {\n          entering: ({\n            element,\n            duration,\n            animate\n          }) => animate(element, {\n            opacity: [0, 1, 0.5, 1]\n          }, {\n            duration: duration / 2\n          }),\n          exiting: ({\n            element,\n            duration,\n            animate\n          }) => animate(element, {\n            opacity: [1, 0, 0.5, 0]\n          }, {\n            duration: duration / 2\n          })\n        }\n      },\n      elements: smallPolylines.map(polyline => ({\n        name: 'deco',\n        path: polyline\n      }))\n    }]\n  };\n};\nexport { createFrameLinesSettings };","map":{"version":3,"names":["filterProps","defaultProps","styled","animated","padding","largeLineWidth","smallLineWidth","smallLineLength","createFrameLinesSettings","props","p","largePolylines","smallPolylines","elements","type","name","style","filter","undefined","fill","strokeWidth","x","y","width","height","stroke","String","map","polyline","path","transitions","entering","element","duration","animate","opacity","exiting"],"sources":["/home/elisha-a/Nasa/client/node_modules/@arwes/frames/build/esm/createFrameLinesSettings/createFrameLinesSettings.js"],"sourcesContent":["import { filterProps } from '@arwes/tools';\nconst defaultProps = {\n    styled: true,\n    animated: true,\n    padding: 0,\n    largeLineWidth: 1,\n    smallLineWidth: 1,\n    smallLineLength: 16\n};\nconst createFrameLinesSettings = (props) => {\n    const { styled, animated, padding: p, largeLineWidth, smallLineWidth, smallLineLength } = { ...defaultProps, ...(props ? filterProps(props) : null) };\n    const largePolylines = [\n        [\n            ['M', p, p + largeLineWidth / 2],\n            ['H', '50% + 0.1']\n        ],\n        [\n            ['M', `100% - ${p + largeLineWidth / 2}`, p + largeLineWidth / 2],\n            ['H', '50% - 0.1']\n        ],\n        [\n            ['M', p + largeLineWidth / 2, `100% - ${p + largeLineWidth / 2}`],\n            ['H', '50% + 0.1']\n        ],\n        [\n            ['M', `100% - ${p + largeLineWidth / 2}`, `100% - ${p + largeLineWidth / 2}`],\n            ['H', '50% - 0.1']\n        ]\n    ];\n    const smallPolylines = [\n        [\n            ['M', p, p + smallLineWidth / 2],\n            ['h', smallLineLength]\n        ],\n        [\n            ['M', `100% - ${p}`, p + smallLineWidth / 2],\n            ['h', -smallLineLength]\n        ],\n        [\n            ['M', p, `100% - ${p + smallLineWidth / 2}`],\n            ['h', smallLineLength]\n        ],\n        [\n            ['M', `100% - ${p}`, `100% - ${p + smallLineWidth / 2}`],\n            ['h', -smallLineLength]\n        ]\n    ];\n    return {\n        elements: [\n            {\n                type: 'rect',\n                name: 'bg',\n                style: {\n                    filter: styled ? 'var(--arwes-frames-bg-filter)' : undefined,\n                    fill: styled ? 'var(--arwes-frames-bg-color, currentcolor)' : undefined,\n                    strokeWidth: 0\n                },\n                animated: animated && ['fade'],\n                x: p,\n                y: p,\n                width: `100% - ${p * 2}`,\n                height: `100% - ${p * 2}`\n            },\n            {\n                type: 'g',\n                style: {\n                    filter: styled ? 'var(--arwes-frames-line-filter)' : undefined,\n                    fill: styled ? 'none' : undefined,\n                    stroke: styled ? 'var(--arwes-frames-line-color, currentcolor)' : undefined,\n                    strokeWidth: String(largeLineWidth)\n                },\n                elements: largePolylines.map((polyline) => ({\n                    name: 'line',\n                    animated: animated && ['draw'],\n                    path: polyline\n                }))\n            },\n            {\n                type: 'g',\n                style: {\n                    filter: styled ? 'var(--arwes-frames-deco-filter)' : undefined,\n                    fill: styled ? 'none' : undefined,\n                    stroke: styled ? 'var(--arwes-frames-deco-color, currentcolor)' : undefined,\n                    strokeWidth: String(smallLineWidth)\n                },\n                animated: animated && {\n                    transitions: {\n                        entering: ({ element, duration, animate }) => animate(element, { opacity: [0, 1, 0.5, 1] }, { duration: duration / 2 }),\n                        exiting: ({ element, duration, animate }) => animate(element, { opacity: [1, 0, 0.5, 0] }, { duration: duration / 2 })\n                    }\n                },\n                elements: smallPolylines.map((polyline) => ({ name: 'deco', path: polyline }))\n            }\n        ]\n    };\n};\nexport { createFrameLinesSettings };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}