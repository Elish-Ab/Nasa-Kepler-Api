{"ast":null,"code":"import { animate, timeline, stagger, spring, glide } from 'motion';\nimport { filterProps } from '@arwes/tools';\nimport { easing } from '../easing/index.js';\nimport { applyAnimatedCSSProps } from '../applyAnimatedCSSProps/index.js';\nimport { transition, fade, flicker, draw } from '../transitions/index.js';\nconst animatedPresets = {\n  fade,\n  flicker,\n  draw\n};\nconst createAnimatedElement = props => {\n  const {\n    element,\n    animator\n  } = props;\n  const getSettings = () => ({\n    hideOnExited: true,\n    renderInitials: true,\n    ...filterProps(props.settingsRef.current)\n  });\n  const animations = new Set();\n  const settingsInitial = getSettings();\n  if (settingsInitial.renderInitials) {\n    const {\n      animated\n    } = settingsInitial;\n    const animatedListReceived = Array.isArray(animated) ? animated : [animated];\n    const animatedList = animatedListReceived.map(item => typeof item === 'string' || Array.isArray(item) ? undefined : item).filter(Boolean);\n    const initialAttributes = animatedList.map(item => item ? item.initialAttributes : null).reduce((total, item) => ({\n      ...total,\n      ...item\n    }), {});\n    Object.keys(initialAttributes).forEach(attribute => {\n      element.setAttribute(attribute, initialAttributes[attribute]);\n    });\n    const dynamicStyles = animatedList.map(item => item ? item.initialStyle : null).reduce((total, item) => ({\n      ...total,\n      ...item\n    }), {});\n    applyAnimatedCSSProps(element, dynamicStyles);\n  }\n  const unsubscribe = animator.subscribe(node => {\n    const {\n      animated,\n      hideOnExited,\n      hideOnEntered,\n      onTransition\n    } = getSettings();\n    element.style.visibility = hideOnExited && node.state === 'exited' || hideOnEntered && node.state === 'entered' ? 'hidden' : '';\n    const nodeSettings = node.settings;\n    const nodeDuration = nodeSettings.duration;\n    const transitionDuration = node.state === 'entering' || node.state === 'entered' ? nodeDuration.enter : nodeDuration.exit;\n    const $ = query => Array.from(element.querySelectorAll(query));\n    const animatedListReceived = Array.isArray(animated) ? animated : [animated];\n    const animatedList = animatedListReceived.filter(Boolean);\n    animatedList.filter(Boolean).map(item => {\n      if (typeof item === 'string') {\n        const preset = animatedPresets[item];\n        if (!preset) {\n          throw new Error(`ARWES createAnimatedElement() unexpected animated preset \"${item}\".`);\n        }\n        return preset();\n      }\n      if (Array.isArray(item)) {\n        return transition(...item);\n      }\n      return item;\n    }).map(settingsItem => settingsItem ? settingsItem.transitions?.[node.state] : null).filter(Boolean).forEach(transition => {\n      if (typeof transition === 'function') {\n        const animation = transition({\n          element,\n          $,\n          duration: transitionDuration,\n          nodeDuration,\n          easing,\n          animate,\n          timeline,\n          stagger,\n          spring,\n          glide\n        });\n        if (animation) {\n          animations.add(animation);\n          if (animation.then) {\n            void animation.then(() => {\n              animations.delete(animation);\n            });\n          } else if (animation.finished) {\n            void animation.finished.then(() => {\n              animations.delete(animation);\n            });\n          }\n        }\n      } else if (transition) {\n        const {\n          duration: durationInitial,\n          delay,\n          easing: ease,\n          repeat,\n          direction,\n          options,\n          ...definition\n        } = transition;\n        const duration = durationInitial || transitionDuration;\n        if (duration <= 0) {\n          throw new Error('ARWES createAnimatedElement() animation duration must be greater than 0.');\n        }\n        try {\n          const animation = animate(element, definition, {\n            duration,\n            delay,\n            easing: typeof ease === 'string' ? easing[ease] ?? ease : ease,\n            repeat,\n            direction,\n            ...options\n          });\n          animations.add(animation);\n          void animation.finished.then(() => {\n            animations.delete(animation);\n          });\n        } catch (err) {\n          throw new Error(`ARWES createAnimatedElement() animation error:\\n${String(err)}`);\n        }\n      }\n    });\n    onTransition?.(element, node);\n  });\n  const cancel = () => {\n    unsubscribe();\n    animations.forEach(animation => animation.cancel());\n    animations.clear();\n  };\n  return Object.freeze({\n    settingsRef: props.settingsRef,\n    cancel\n  });\n};\nexport { createAnimatedElement };","map":{"version":3,"names":["animate","timeline","stagger","spring","glide","filterProps","easing","applyAnimatedCSSProps","transition","fade","flicker","draw","animatedPresets","createAnimatedElement","props","element","animator","getSettings","hideOnExited","renderInitials","settingsRef","current","animations","Set","settingsInitial","animated","animatedListReceived","Array","isArray","animatedList","map","item","undefined","filter","Boolean","initialAttributes","reduce","total","Object","keys","forEach","attribute","setAttribute","dynamicStyles","initialStyle","unsubscribe","subscribe","node","hideOnEntered","onTransition","style","visibility","state","nodeSettings","settings","nodeDuration","duration","transitionDuration","enter","exit","$","query","from","querySelectorAll","preset","Error","settingsItem","transitions","animation","add","then","delete","finished","durationInitial","delay","ease","repeat","direction","options","definition","err","String","cancel","clear","freeze"],"sources":["/home/elisha-a/Nasa/client/node_modules/@arwes/animated/build/esm/createAnimatedElement/createAnimatedElement.js"],"sourcesContent":["import { animate, timeline, stagger, spring, glide } from 'motion';\nimport { filterProps } from '@arwes/tools';\nimport { easing } from '../easing/index.js';\nimport { applyAnimatedCSSProps } from '../applyAnimatedCSSProps/index.js';\nimport { transition, fade, flicker, draw } from '../transitions/index.js';\nconst animatedPresets = {\n    fade,\n    flicker,\n    draw\n};\nconst createAnimatedElement = (props) => {\n    const { element, animator } = props;\n    const getSettings = () => ({\n        hideOnExited: true,\n        renderInitials: true,\n        ...filterProps(props.settingsRef.current)\n    });\n    const animations = new Set();\n    const settingsInitial = getSettings();\n    if (settingsInitial.renderInitials) {\n        const { animated } = settingsInitial;\n        const animatedListReceived = Array.isArray(animated) ? animated : [animated];\n        const animatedList = animatedListReceived\n            .map((item) => (typeof item === 'string' || Array.isArray(item) ? undefined : item))\n            .filter(Boolean);\n        const initialAttributes = animatedList\n            .map((item) => (item ? item.initialAttributes : null))\n            .reduce((total, item) => ({ ...total, ...item }), {});\n        Object.keys(initialAttributes).forEach((attribute) => {\n            element.setAttribute(attribute, initialAttributes[attribute]);\n        });\n        const dynamicStyles = animatedList\n            .map((item) => (item ? item.initialStyle : null))\n            .reduce((total, item) => ({ ...total, ...item }), {});\n        applyAnimatedCSSProps(element, dynamicStyles);\n    }\n    const unsubscribe = animator.subscribe((node) => {\n        const { animated, hideOnExited, hideOnEntered, onTransition } = getSettings();\n        element.style.visibility =\n            (hideOnExited && node.state === 'exited') || (hideOnEntered && node.state === 'entered')\n                ? 'hidden'\n                : '';\n        const nodeSettings = node.settings;\n        const nodeDuration = nodeSettings.duration;\n        const transitionDuration = node.state === 'entering' || node.state === 'entered' ? nodeDuration.enter : nodeDuration.exit;\n        const $ = (query) => Array.from(element.querySelectorAll(query));\n        const animatedListReceived = Array.isArray(animated) ? animated : [animated];\n        const animatedList = animatedListReceived.filter(Boolean);\n        animatedList\n            .filter(Boolean)\n            .map((item) => {\n            if (typeof item === 'string') {\n                const preset = animatedPresets[item];\n                if (!preset) {\n                    throw new Error(`ARWES createAnimatedElement() unexpected animated preset \"${item}\".`);\n                }\n                return preset();\n            }\n            if (Array.isArray(item)) {\n                return transition(...item);\n            }\n            return item;\n        })\n            .map((settingsItem) => (settingsItem ? settingsItem.transitions?.[node.state] : null))\n            .filter(Boolean)\n            .forEach((transition) => {\n            if (typeof transition === 'function') {\n                const animation = transition({\n                    element,\n                    $,\n                    duration: transitionDuration,\n                    nodeDuration,\n                    easing,\n                    animate,\n                    timeline,\n                    stagger,\n                    spring,\n                    glide\n                });\n                if (animation) {\n                    animations.add(animation);\n                    if (animation.then) {\n                        void animation.then(() => {\n                            animations.delete(animation);\n                        });\n                    }\n                    else if (animation.finished) {\n                        void animation.finished.then(() => {\n                            animations.delete(animation);\n                        });\n                    }\n                }\n            }\n            else if (transition) {\n                const { duration: durationInitial, delay, easing: ease, repeat, direction, options, ...definition } = transition;\n                const duration = durationInitial || transitionDuration;\n                if (duration <= 0) {\n                    throw new Error('ARWES createAnimatedElement() animation duration must be greater than 0.');\n                }\n                try {\n                    const animation = animate(element, definition, {\n                        duration,\n                        delay,\n                        easing: typeof ease === 'string' ? (easing[ease] ?? ease) : ease,\n                        repeat,\n                        direction,\n                        ...options\n                    });\n                    animations.add(animation);\n                    void animation.finished.then(() => {\n                        animations.delete(animation);\n                    });\n                }\n                catch (err) {\n                    throw new Error(`ARWES createAnimatedElement() animation error:\\n${String(err)}`);\n                }\n            }\n        });\n        onTransition?.(element, node);\n    });\n    const cancel = () => {\n        unsubscribe();\n        animations.forEach((animation) => animation.cancel());\n        animations.clear();\n    };\n    return Object.freeze({ settingsRef: props.settingsRef, cancel });\n};\nexport { createAnimatedElement };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}