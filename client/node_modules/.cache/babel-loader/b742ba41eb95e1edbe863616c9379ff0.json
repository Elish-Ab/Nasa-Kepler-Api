{"ast":null,"code":"const createEffectIlluminatorSVG = props => {\n  const {\n    svg,\n    container,\n    color = 'hsl(0 0% 50% / 5%)',\n    size = 300,\n    className,\n    style\n  } = props;\n  const element = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n  const gradientId = `illuminator-${Math.random()}`;\n  element.dataset.name = 'illuminator';\n  if (className) {\n    element.classList.add(className);\n  }\n  Object.assign(element.style, style);\n  element.innerHTML = `\n    <defs>\n      <radialGradient id=\"${gradientId}\">\n        <stop offset=\"0%\" stop-color=\"${color}\" />\n        <stop offset=\"100%\" stop-color=\"transparent\" />\n      </radialGradient>\n    </defs>\n    <circle\n      r=\"${size / 2}\"\n      style=\"\n        position: absolute;\n        transition: opacity 200ms ease-out;\n        opacity: 0;\n      \"\n      fill=\"url(#${gradientId})\"\n    />\n  `;\n  const illuminator = element.querySelector('circle');\n  illuminator.style.transform = `translate(-${size / 2}px, -${size / 2}px)`;\n  const onMove = event => {\n    const bounds = svg.getBoundingClientRect();\n    const x = event.clientX - bounds.left + size / 2;\n    const y = event.clientY - bounds.top + size / 2;\n    illuminator.style.opacity = '1';\n    illuminator.setAttribute('cx', String(x));\n    illuminator.setAttribute('cy', String(y));\n  };\n  const onHide = () => {\n    illuminator.style.opacity = '0';\n  };\n  container.appendChild(element);\n  document.addEventListener('mousemove', onMove);\n  document.addEventListener('mouseleave', onHide);\n  const cancel = () => {\n    element.remove();\n    document.removeEventListener('mousemove', onMove);\n    document.removeEventListener('mouseleave', onHide);\n  };\n  return Object.freeze({\n    cancel\n  });\n};\nexport { createEffectIlluminatorSVG };","map":{"version":3,"names":["createEffectIlluminatorSVG","props","svg","container","color","size","className","style","element","document","createElementNS","gradientId","Math","random","dataset","name","classList","add","Object","assign","innerHTML","illuminator","querySelector","transform","onMove","event","bounds","getBoundingClientRect","x","clientX","left","y","clientY","top","opacity","setAttribute","String","onHide","appendChild","addEventListener","cancel","remove","removeEventListener","freeze"],"sources":["/home/elisha-a/Nasa/client/node_modules/@arwes/effects/build/esm/createEffectIlluminatorSVG/createEffectIlluminatorSVG.js"],"sourcesContent":["const createEffectIlluminatorSVG = (props) => {\n    const { svg, container, color = 'hsl(0 0% 50% / 5%)', size = 300, className, style } = props;\n    const element = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n    const gradientId = `illuminator-${Math.random()}`;\n    element.dataset.name = 'illuminator';\n    if (className) {\n        element.classList.add(className);\n    }\n    Object.assign(element.style, style);\n    element.innerHTML = `\n    <defs>\n      <radialGradient id=\"${gradientId}\">\n        <stop offset=\"0%\" stop-color=\"${color}\" />\n        <stop offset=\"100%\" stop-color=\"transparent\" />\n      </radialGradient>\n    </defs>\n    <circle\n      r=\"${size / 2}\"\n      style=\"\n        position: absolute;\n        transition: opacity 200ms ease-out;\n        opacity: 0;\n      \"\n      fill=\"url(#${gradientId})\"\n    />\n  `;\n    const illuminator = element.querySelector('circle');\n    illuminator.style.transform = `translate(-${size / 2}px, -${size / 2}px)`;\n    const onMove = (event) => {\n        const bounds = svg.getBoundingClientRect();\n        const x = event.clientX - bounds.left + size / 2;\n        const y = event.clientY - bounds.top + size / 2;\n        illuminator.style.opacity = '1';\n        illuminator.setAttribute('cx', String(x));\n        illuminator.setAttribute('cy', String(y));\n    };\n    const onHide = () => {\n        illuminator.style.opacity = '0';\n    };\n    container.appendChild(element);\n    document.addEventListener('mousemove', onMove);\n    document.addEventListener('mouseleave', onHide);\n    const cancel = () => {\n        element.remove();\n        document.removeEventListener('mousemove', onMove);\n        document.removeEventListener('mouseleave', onHide);\n    };\n    return Object.freeze({ cancel });\n};\nexport { createEffectIlluminatorSVG };\n"],"mappings":"AAAA,MAAMA,0BAA0B,GAAIC,KAAK,IAAK;EAC1C,MAAM;IAAEC,GAAG;IAAEC,SAAS;IAAEC,KAAK,GAAG,oBAAoB;IAAEC,IAAI,GAAG,GAAG;IAAEC,SAAS;IAAEC;EAAM,CAAC,GAAGN,KAAK;EAC5F,MAAMO,OAAO,GAAGC,QAAQ,CAACC,eAAe,CAAC,4BAA4B,EAAE,GAAG,CAAC;EAC3E,MAAMC,UAAU,GAAG,eAAeC,IAAI,CAACC,MAAM,CAAC,CAAC,EAAE;EACjDL,OAAO,CAACM,OAAO,CAACC,IAAI,GAAG,aAAa;EACpC,IAAIT,SAAS,EAAE;IACXE,OAAO,CAACQ,SAAS,CAACC,GAAG,CAACX,SAAS,CAAC;EACpC;EACAY,MAAM,CAACC,MAAM,CAACX,OAAO,CAACD,KAAK,EAAEA,KAAK,CAAC;EACnCC,OAAO,CAACY,SAAS,GAAG;AACxB;AACA,4BAA4BT,UAAU;AACtC,wCAAwCP,KAAK;AAC7C;AACA;AACA;AACA;AACA,WAAWC,IAAI,GAAG,CAAC;AACnB;AACA;AACA;AACA;AACA;AACA,mBAAmBM,UAAU;AAC7B;AACA,GAAG;EACC,MAAMU,WAAW,GAAGb,OAAO,CAACc,aAAa,CAAC,QAAQ,CAAC;EACnDD,WAAW,CAACd,KAAK,CAACgB,SAAS,GAAG,cAAclB,IAAI,GAAG,CAAC,QAAQA,IAAI,GAAG,CAAC,KAAK;EACzE,MAAMmB,MAAM,GAAIC,KAAK,IAAK;IACtB,MAAMC,MAAM,GAAGxB,GAAG,CAACyB,qBAAqB,CAAC,CAAC;IAC1C,MAAMC,CAAC,GAAGH,KAAK,CAACI,OAAO,GAAGH,MAAM,CAACI,IAAI,GAAGzB,IAAI,GAAG,CAAC;IAChD,MAAM0B,CAAC,GAAGN,KAAK,CAACO,OAAO,GAAGN,MAAM,CAACO,GAAG,GAAG5B,IAAI,GAAG,CAAC;IAC/CgB,WAAW,CAACd,KAAK,CAAC2B,OAAO,GAAG,GAAG;IAC/Bb,WAAW,CAACc,YAAY,CAAC,IAAI,EAAEC,MAAM,CAACR,CAAC,CAAC,CAAC;IACzCP,WAAW,CAACc,YAAY,CAAC,IAAI,EAAEC,MAAM,CAACL,CAAC,CAAC,CAAC;EAC7C,CAAC;EACD,MAAMM,MAAM,GAAGA,CAAA,KAAM;IACjBhB,WAAW,CAACd,KAAK,CAAC2B,OAAO,GAAG,GAAG;EACnC,CAAC;EACD/B,SAAS,CAACmC,WAAW,CAAC9B,OAAO,CAAC;EAC9BC,QAAQ,CAAC8B,gBAAgB,CAAC,WAAW,EAAEf,MAAM,CAAC;EAC9Cf,QAAQ,CAAC8B,gBAAgB,CAAC,YAAY,EAAEF,MAAM,CAAC;EAC/C,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACjBhC,OAAO,CAACiC,MAAM,CAAC,CAAC;IAChBhC,QAAQ,CAACiC,mBAAmB,CAAC,WAAW,EAAElB,MAAM,CAAC;IACjDf,QAAQ,CAACiC,mBAAmB,CAAC,YAAY,EAAEL,MAAM,CAAC;EACtD,CAAC;EACD,OAAOnB,MAAM,CAACyB,MAAM,CAAC;IAAEH;EAAO,CAAC,CAAC;AACpC,CAAC;AACD,SAASxC,0BAA0B","ignoreList":[]},"metadata":{},"sourceType":"module"}