import type { AnimatorNode } from '@arwes/animator';
import type { AnimatedProp } from '../types.js';
type AnimatedElementPropsSettings<Element = HTMLElement | SVGElement> = {
    animated: AnimatedProp;
    hideOnExited?: undefined | boolean;
    hideOnEntered?: undefined | boolean;
    renderInitials?: undefined | boolean;
    onTransition?: undefined | ((element: Element, node: AnimatorNode) => void);
};
type AnimatedElementProps<Element = HTMLElement | SVGElement> = {
    element: Element;
    animator: AnimatorNode;
    settingsRef: {
        current: AnimatedElementPropsSettings<Element>;
    };
};
type AnimatedElement<Element = HTMLElement | SVGElement> = {
    settingsRef: {
        current: AnimatedElementPropsSettings<Element>;
    };
    cancel: () => void;
};
declare const createAnimatedElement: <Element_1 extends HTMLElement | SVGElement = HTMLElement>(props: AnimatedElementProps<Element_1>) => AnimatedElement<Element_1>;
export type { AnimatedElementPropsSettings, AnimatedElementProps, AnimatedElement };
export { createAnimatedElement };
